{"version":3,"sources":["components/KeepAlive/index.module.scss","pages/Login/components/input-extra/index.module.scss","pages/Login/index.module.scss","pages/Layout/index.module.scss","components/PreviousRoute/index.module.scss","pages/Home/components/Channels/index.module.scss","components/Image/index.module.scss","components/ArticleItem/index.module.scss","pages/Home/components/ArticleList/index.module.scss","pages/Home/index.module.scss","pages/Question/index.module.scss","pages/Video/index.module.scss","pages/Profile/index.module.scss","pages/Profile/Edit/index.module.scss","pages/Profile/Edit/components/EditList/index.module.scss","pages/Profile/Edit/components/EditInput/index.module.scss","pages/Search/index.module.scss","pages/Search/Result/index.module.scss","components/Sticky/index.module.scss","components/NoneComment/index.module.scss","pages/Article/components/CommentItem/index.module.scss","pages/Article/components/CommentInput/index.module.scss","pages/Article/components/CommentFooter/index.module.scss","pages/Article/components/Reply/index.module.scss","pages/Article/components/Share/index.module.scss","pages/Article/index.module.scss","pages/Profile/Chat/index.module.scss","pages/Profile/Feedback/index.module.scss","pages/Profile/Activity/index.module.scss","pages/Profile/Activity/components/Announcement/index.module.scss","pages/Profile/Activity/components/Statics/index.module.scss","pages/Profile/Fans/index.module.scss","pages/Profile/Fans/components/Followed/index.module.scss","pages/Profile/Articles/index.module.scss","pages/Profile/Notification/index.module.scss","pages/Profile/Notification/components/ListAll/index.module.scss","pages/Profile/Notification/components/NotiItem/index.module.scss","serviceWorkerRegistration.ts","reportWebVitals.ts","utils/token.ts","utils/history.ts","utils/http.ts","components/AuthRoute/index.tsx","components/KeepAlive/index.tsx","pages/Login/components/input-extra/index.tsx","store/actions/login.ts","store/actions/profile.ts","store/actions/home.ts","store/actions/article.ts","pages/Login/index.tsx","components/Icon/index.tsx","components/PreviousRoute/index.tsx","pages/Home/components/Channels/index.tsx","components/Image/index.tsx","components/ArticleItem/index.tsx","pages/Article/index.tsx","pages/Home/components/ArticleList/index.tsx","pages/Home/index.tsx","pages/Question/index.tsx","pages/Video/index.tsx","pages/Profile/index.tsx","pages/Layout/index.tsx","pages/Profile/Edit/components/EditList/index.js","pages/Profile/Edit/components/EditInput/index.tsx","pages/Profile/Edit/index.tsx","pages/Search/index.tsx","store/actions/search.ts","pages/Search/Result/index.tsx","components/Sticky/index.tsx","assets/none.png","components/NoneComment/index.tsx","pages/Article/components/CommentItem/index.tsx","pages/Article/components/CommentInput/index.tsx","pages/Article/components/CommentFooter/index.tsx","pages/Article/components/Reply/index.tsx","pages/Article/components/Share/index.tsx","pages/Profile/Chat/index.tsx","pages/Profile/Feedback/index.tsx","pages/Profile/Activity/components/Creation/index.tsx","pages/Profile/Activity/components/Announcement/index.tsx","pages/Profile/Activity/components/Statics/index.tsx","pages/Profile/Activity/index.tsx","pages/Profile/Fans/components/Followed/index.tsx","pages/Profile/Fans/index.tsx","pages/Profile/Articles/index.tsx","pages/Profile/Notification/components/NotiItem/index.tsx","pages/Profile/Notification/components/ListAll/index.tsx","pages/Profile/Notification/index.tsx","pages/NotFound/index.tsx","App.tsx","store/reducers/login.ts","store/reducers/profile.ts","store/reducers/home.ts","store/reducers/search.ts","store/reducers/article.ts","store/reducers/index.ts","store/index.ts","index.tsx"],"names":["module","exports","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","TOKEN_KEY","getToken","JSON","parse","localStorage","getItem","setToken","data","setItem","stringify","removeToken","removeItem","history","createBrowserHistory","basename","baseURL","process","http","axios","create","timeout","interceptors","request","use","url","startsWith","token","headers","Authorization","response","a","status","refresh_token","push","from","pathname","put","res","Promise","reject","AuthRoute","children","rest","render","props","to","KeepAlive","activePath","isMatch","className","styles","root","style","display","InputExtra","extra","onExtra","value","onChange","placeholder","onClick","sendCode","mobile","get","login","values","dispatch","post","message","toLowerCase","tokens","type","payload","updateUser","patch","updateUserPhoto","photo","getUserArticle","page","params","per_page","getUserFans","getUserArticleList","path","typeRecord","all","system","comment","fans","thumbsup","getUserNotification","CHANNEL_KEY","selectTab","getArticles","channelId","timestamp","channel_id","prevTime","pre_timestamp","list","results","getMoreArticles","updateCommentMount","articleId","getState","comm_count","article","info","getArticleById","id","getMoreArticleComments","offset","source","followArticleAuthor","aut_id","is_followed","delete","target","name","collectArticle","art_id","is_collected","likeArticle","attitude","sendComment","content","likeComment","is_liking","like_count","Login","Form","useForm","form","useLocation","useDispatch","useHistory","useState","time","setTime","timerIdRef","useRef","mobileRef","forceUpdate","useEffect","getCode","undefined","getFieldValue","getFieldError","length","mobileInputDOM","current","focus","Toast","show","duration","clearInterval","setInterval","onFinsih","afterClose","replace","onBack","go","onFinish","Item","rules","required","pattern","ref","noStyle","shouldUpdate","disabled","isFieldsTouched","getFieldsError","filter","errors","block","classNames","marginTop","textAlign","Icon","classnames","xlinkHref","PreviousRoute","prevPathRef","child","matched","matchPath","childWithPrevPathname","React","cloneElement","prevRoute","prevPathname","Channels","onClose","useSelector","home","channels","restChannels","channelActiveIndex","isEdit","setIsEdit","allChannels","allChannel","differenceBy","onAddChannel","item","channel","myChannels","newMyChannels","onMyChannelClick","index","map","Image","memo","src","isError","setIsError","isLoading","setIsLoading","imgRef","onLoad","onError","imageObserver","IntersectionObserver","entries","imgObserver","forEach","entry","isIntersecting","lazyImage","dataset","unobserve","rootMargin","observe","disconnect","alt","dayjs","locale","extend","relativeTime","CommentType","ArticleItem","title","images","aut_name","pubdate","isLogin","onFeedback","i","ArticleList","activeId","detailParams","loaction","channelArticle","articles","isUpdatedCommentMount","setTimeout","update","loadMore","Date","onRefresh","cover","articleItemProps","hasMore","Home","open","setOpen","prevRouteRef","localChannels","activeKey","key","Tab","forceRender","position","visible","Question","Video","connect","profile","onGetProfile","follow_count","fans_count","art_count","tabs","icon","text","Layout","exact","active","EditList","onUpdateGender","items","EditInput","setValue","right","trim","maxLength","showCount","List","Dialog","photoItems","genderItems","ProfileEdit","fileRef","userInfo","showBirthday","setShowBirthday","listDrawer","setListDrawer","inputDrawer","setInputDrawer","e","onPhotoChagne","file","files","formData","FormData","append","onGenderClose","onListOpen","onInputOpen","onUpdateUser","onInputClose","onBirthdayChange","date","birthday","format","intro","gender","nameConfig","introConfig","width","height","arrow","onConfirm","min","max","hidden","closeOnMaskClick","closeOnAction","actions","color","onMaskClick","click","SEARCH_KEY","SearchPage","searchText","setSearchText","searchHistory","setSearchHistory","suggestion","search","localSearchHistory","debounceGetSuggest","useDebounceFn","q","options","wait","run","onGoToDetail","onSuggestionItemClick","onSearch","searchValue","unshift","includes","restArr","suggetList","suggestIndex","indexOf","left","slice","onClear","Result","searchResult","URLSearchParams","getSearchResult","isFromResult","onToAritcleDetail","Sticky","placeholderRef","containerRef","placeholderDOM","containerDOM","onScroll","throttle","getBoundingClientRect","top","addEventListener","removeEventListener","NoneComment","noComment","CommentItem","aut_photo","reply_count","onThumbsUp","onOpenReply","onFollow","replyJSX","CommentInput","onComment","txtRef","rows","CommentFooter","onLike","onCollected","onShare","onShowComment","Reply","onReplyThumbsUp","originComment","setOriginComment","com_id","commentOpen","setCommentOpen","setComment","loadDdata","onCloseComment","onSendComment","total_count","new_obj","onOriginThumbsUp","likeCount","Share","Article","replyOpen","setReplyOpen","shareOpen","setShareOpen","isArticleLoading","setIsArticleLoading","showNavAuthor","setShowNavAuthor","authorRef","wrapperRef","commentRef","isShowComment","loadStateRef","useParams","loadData","getArticleComment","dgHtml","document","querySelector","codes","querySelectorAll","hljs","configure","ignoreUnescapedHTML","element","highlightElement","pre","wrapperDOM","handleScroll","bottom","onCloseReplyWithUpdate","commentId","total","updateCommentCount","onCloseReply","loadMoreComments","last_id","onInsertComment","articleCommCount","read_count","end_id","Math","hasMoreComment","speed","viewBox","backgroundColor","foregroundColor","x","y","rx","ry","cx","cy","r","dangerouslySetInnerHTML","__html","DOMPurify","sanitize","scrollTo","scrollTop","Chat","chatList","setChatList","socketRef","chatListRef","socketURL","socketio","io","query","transports","on","msg","scrollHeight","onKeyDown","code","emit","FeedBack","upload","multiple","Creation","userArticle","Announcement","description","Statics","userFigure","Activity","Followed","userFans","mutual_follow","Fans","defaultActiveKey","dataRecord","Articles","userArticleList","NotiItem","comment_target","create_time","ListAll","userNotification1","Notification","NotFound","timerRef","App","Search","Feedback","initialState","followings","followers","rootReducer","combineReducers","action","userArtListType","userArtListData","userNotiType","userNotiData","deletedChannel","find","sortBy","oldList","updateChannelId","middlewares","composeWithDevTools","applyMiddleware","thunk","store","createStore","ReactDOM","URL","href","origin","fetch","contentType","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"qGACAA,EAAOC,QAAU,CAAC,KAAO,0B,oBCAzBD,EAAOC,QAAU,CAAC,KAAO,4B,oBCAzBD,EAAOC,QAAU,CAAC,KAAO,sB,oBCAzBD,EAAOC,QAAU,CAAC,KAAO,uB,oBCAzBD,EAAOC,QAAU,CAAC,KAAO,8B,oBCAzBD,EAAOC,QAAU,CAAC,KAAO,yB,oBCAzBD,EAAOC,QAAU,CAAC,KAAO,sB,oBCAzBD,EAAOC,QAAU,CAAC,KAAO,4B,oBCAzBD,EAAOC,QAAU,CAAC,KAAO,4B,oBCAzBD,EAAOC,QAAU,CAAC,KAAO,qB,oBCAzBD,EAAOC,QAAU,CAAC,KAAO,yB,oBCAzBD,EAAOC,QAAU,CAAC,KAAO,sB,oBCAzBD,EAAOC,QAAU,CAAC,KAAO,wB,oBCAzBD,EAAOC,QAAU,CAAC,KAAO,qB,oBCAzBD,EAAOC,QAAU,CAAC,KAAO,yB,oBCAzBD,EAAOC,QAAU,CAAC,KAAO,0B,oBCAzBD,EAAOC,QAAU,CAAC,KAAO,uB,oBCAzBD,EAAOC,QAAU,CAAC,KAAO,uB,oBCAzBD,EAAOC,QAAU,CAAC,KAAO,uB,oBCAzBD,EAAOC,QAAU,CAAC,KAAO,4B,oBCAzBD,EAAOC,QAAU,CAAC,KAAO,4B,oBCAzBD,EAAOC,QAAU,CAAC,KAAO,6B,oBCAzBD,EAAOC,QAAU,CAAC,KAAO,8B,oBCAzBD,EAAOC,QAAU,CAAC,KAAO,sB,oBCAzBD,EAAOC,QAAU,CAAC,KAAO,sB,oBCAzBD,EAAOC,QAAU,CAAC,KAAO,wB,oBCAzBD,EAAOC,QAAU,CAAC,KAAO,qB,oBCAzBD,EAAOC,QAAU,CAAC,KAAO,yB,oBCAzBD,EAAOC,QAAU,CAAC,KAAO,yB,0CCAzBD,EAAOC,QAAU,CAAC,KAAO,6B,oBCAzBD,EAAOC,QAAU,CAAC,KAAO,wB,oBCAzBD,EAAOC,QAAU,CAAC,KAAO,qB,oBCAzBD,EAAOC,QAAU,CAAC,KAAO,yB,oBCAzBD,EAAOC,QAAU,CAAC,KAAO,yB,oBCAzBD,EAAOC,QAAU,CAAC,KAAO,6B,oBCAzBD,EAAOC,QAAU,CAAC,KAAO,wB,oBCAzBD,EAAOC,QAAU,CAAC,KAAO,yB,2FCWnBC,EAAcC,QAC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","file":"static/js/main.3f048f93.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"KeepAlive_root__2ITk6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"input-extra_root__2CKsV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Login_root__201yb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Layout_root__2FMoD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PreviousRoute_root__1gf55\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Channels_root__4cOG1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Image_root__34eRa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ArticleItem_root__2HXJZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ArticleList_root__uN_Lu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Home_root__2bSLb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Question_root__1pLnZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Video_root__1VyXb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Profile_root__3YLUM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Edit_root__2iBiN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"EditList_root__2lNE2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"EditInput_root__2pUY9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Search_root__1m6F-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Result_root__N5_Q0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Sticky_root__24ckk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"NoneComment_root__3Ljl-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"CommentItem_root__3E5IE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"CommentInput_root__7h4rk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"CommentFooter_root__SD7k7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Reply_root__qK4mS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Share_root__2JyBK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Article_root__2yy1P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Chat_root__uWixs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Feedback_root__3lOl4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Activity_root__1Ld82\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Announcement_root__JZSzD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Statics_root__u2smU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Fans_root__2foS-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Followed_root__1H6F6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Articles_root__1XOqh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Notification_root__2k_uX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ListAll_root__1nSwi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"NotiItem_root__4FEca\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { Token } from '@/store/types'\n\nconst TOKEN_KEY = 'geek-h5_pip__'\n\n// 获取 token\n// 此处，将获取到的 token 字符串，先转化为 JSON 格式的对象，再返回\nconst getToken = () =>\n  JSON.parse(localStorage.getItem(TOKEN_KEY) || '{}') as Token\n\n// 设置 token\nconst setToken = (data: Token) =>\n  localStorage.setItem(TOKEN_KEY, JSON.stringify(data))\n\n// 移除 token\nconst removeToken = () => localStorage.removeItem(TOKEN_KEY)\n\n// 判断是否登录（授权）\nconst isAuth = () => !!getToken().token\n\nexport { getToken, setToken, removeToken, isAuth }\n","// 1 导入 createBrowserHistory 函数\nimport { createBrowserHistory } from 'history';\n\n// 2 创建 history 对象\nconst history = createBrowserHistory({\n  basename: '/geek',\n});\n\n// 3 导出创建好的 history\nexport { history };\n","import axios from 'axios'\n\n// 导入工具\nimport { getToken, removeToken, setToken } from './token'\nimport { history } from './history'\n\n// 通过 process.env.REACT_APP_URL 就可以读取到配置文件中，配置的接口路径了\n// export const baseURL = process.env.REACT_APP_URL!\nexport const baseURL =\n  process.env.NODE_ENV === 'development' ? '/api' : process.env.REACT_APP_URL\n\n// 创建 axios 的实例\nconst http = axios.create({\n  baseURL,\n  timeout: 5000,\n})\n\n// 请求拦截器\nhttp.interceptors.request.use(config => {\n  // 统一添加请求头\n  if (!config.url!.startsWith('/authorizations')) {\n    // 非登录接口，再添加 token\n    // getToken() ===> { token, refresh_token }\n    const { token } = getToken()\n    // 判断是否有 token 如果有，再添加请求头\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`\n    }\n  }\n\n  return config\n})\n\n// 响应拦截器\nhttp.interceptors.response.use(\n  response => response,\n  async error => {\n    try {\n      // 判断 token 是否失效\n      if (error.response.status === 401) {\n        // 换取最新的 token\n        const { refresh_token } = getToken()\n\n        // 判断本地存储中是否有 refresh_token\n        if (!refresh_token) {\n          // 跳转到登录页面\n          return history.push('/login', {\n            from: history.location.pathname,\n          })\n        }\n\n        // 使用 axios 来发送请求\n        const res = await axios.put(`${baseURL}/authorizations`, null, {\n          headers: {\n            Authorization: `Bearer ${refresh_token}`,\n          },\n        })\n\n        // 拿到 token\n        const { token } = res.data.data\n        // 存储到本地缓存中\n        setToken({ token, refresh_token })\n        // 继续执行原来的请求\n        return http(error.config)\n      }\n    } catch (e) {\n      removeToken()\n      history.push('/login', {\n        from: history.location.pathname,\n      })\n      return Promise.reject(error)\n    }\n  }\n)\n\nexport { http }\n","import React from 'react'\nimport { Route, RouteProps, Redirect } from 'react-router-dom'\n\nimport { isAuth } from '@/utils'\n\n/**\n  原来：<AuthRoute component={Profile} path=\"/home/profile\" />\n  现在：\n    <AuthRoute path=\"/home/profile\">\n      <Profile />\n    </AuthRoute>\n */\n\nconst AuthRoute = ({ children, ...rest }: RouteProps) => {\n  return (\n    <Route\n      {...rest}\n      render={props => {\n        const isLogin = isAuth()\n        if (isLogin) {\n          return children\n        }\n\n        // 未登录\n        return (\n          <Redirect\n            to={{\n              pathname: '/login',\n              state: { from: props.location.pathname }\n            }}\n          />\n        )\n      }}\n    />\n  )\n}\n\nexport default AuthRoute\n","import { Route, RouteProps } from 'react-router-dom'\nimport styles from './index.module.scss'\n\ntype Props = RouteProps & {\n  activePath: string\n}\n\n// 示例：\n//  1 需要保留页面的路由地址 activePath: '/home'，浏览器地址栏（当前路由）pathname: '/home'\n//  1 需要保留页面的路由地址 activePath: '/home'，浏览器地址栏（当前路由）pathname: '/home/index'\n//  2 需要保留页面的路由地址 activePath: '/home'，浏览器地址栏（当前路由）pathname: '/login'\nconst KeepAlive = ({ activePath, children, ...rest }: Props) => {\n  return (\n    <Route\n      {...rest}\n      children={props => {\n        const {\n          location: { pathname }\n        } = props\n        const isMatch = pathname.startsWith(activePath)\n\n        return (\n          <div\n            className={styles.root}\n            style={{ display: isMatch ? 'block' : 'none' }}\n          >\n            {children}\n          </div>\n        )\n      }}\n    />\n  )\n}\n\nexport { KeepAlive }\n","import { Input } from 'antd-mobile'\nimport styles from './index.module.scss'\n\ntype Props = {\n  extra: string\n  onExtra: () => void\n  value?: string\n  onChange?: (value: string) => void\n}\n\nconst InputExtra = ({ extra, onExtra, value, onChange }: Props) => {\n  return (\n    <div className={styles.root}>\n      <Input placeholder=\"请输入验证码\" value={value} onChange={onChange} />\n      <span className=\"extra\" onClick={onExtra}>\n        {extra}\n      </span>\n    </div>\n  )\n}\n\nexport default InputExtra\n","import type { AppThunkAction } from '../index'\nimport { http, setToken } from '@/utils'\n\nimport { Token } from '../types'\n\n// 存储token到redux中\n\n// 解决方式一：\n// const loginSetToken = (payload: Token): { type: 'login/setToken'; payload: Token } => ({ type: 'login/setToken', payload })\n\n// 解决方式二：将 reducer 中写好的 action 类型导入，然后使用\n\n// 解决方式三：\n// let type = ''\n// const type = 'login/setToken'\n// const loginSetToken = (payload: Token) =>\n//   ({ type: 'login/setToken', payload } as const)\nconst loginSetToken = (payload: Token) => ({\n  type: 'login/setToken' as const,\n  payload\n})\n\n// 获取验证码\nconst sendCode = (mobile: string) => {\n  return async () => {\n    try {\n      await http.get(`/sms/codes/${mobile}`)\n    } catch (e) {}\n  }\n}\n\n// 登录逻辑\ntype LoginState = { mobile: string; code: string }\nconst login = (values: LoginState): AppThunkAction => {\n  return async dispatch => {\n    type LoginRes = {\n      message: string\n      data: {\n        token: string\n        refresh_token: string\n      }\n    }\n\n    const res = await http.post<LoginRes>('/authorizations', values)\n\n    // res.data.message\n    // res.data.data.token\n\n    if (res.data.message.toLowerCase() === 'ok') {\n      const tokens = res.data.data\n\n      // 存储 token\n      setToken(tokens)\n      // 将 token 数据存储到 redux 中\n\n      // 修改了 dispatch 的类型后，原来分发 action 代码会报错：\n      // 错误原因：\n      //  属性“type”的类型不兼容。\n      //  不能将类型“string”分配给类型“\"home/getMoreArticles\"”。\n      // 分析错误原因：因此此处是将 loginSetToken() 的返回值传递给了 dispatch\n      //  所以，实际上 loginSetToken() 的返回值类型为 string，\n      //       而 \"home/getMoreArticles\" 类型是所有 Actions 中的某一个 aciton 的 type 类型\n      //       也就是将 string 类型的值 赋值给了 \"home/getMoreArticles\" 类型，这样，将一个范围更大的类型赋值给了范围更小的类型\n      //       导致类型错误，所以就会报错！\n      // 解决问题：只需要让 loginSetToken() 方法的返回值类型中，action 不再是 string，而变成字面量类型即可\n      dispatch(loginSetToken(tokens))\n      // dispatch<{ type: 'login/setToken'; payload: Token }>({ type: 'login/setToken', payload: tokens })\n      // dispatch({ type: 'login/setToken', payload: tokens })\n    }\n  }\n}\n\nexport { sendCode, login }\n","import type { AppThunkAction } from '../index'\nimport { http } from '@/utils'\n\n// 我的页面 - 获取个人信息\nconst getProfile = (): AppThunkAction => {\n  return async dispatch => {\n    try {\n      const res = await http.get('/user')\n      const { data, message } = res.data\n\n      if (message.toLowerCase() === 'ok') {\n        // 存储 redux 中\n        dispatch({ type: 'profile/getProfile', payload: data })\n      }\n    } catch (e) {}\n  }\n}\n\n// 个人资料 - 修改个人信息\ntype UpdateUserParams = {\n  gender?: number\n  name?: string\n  intro?: string\n  birthday?: string\n}\nconst updateUser = (data: UpdateUserParams): AppThunkAction => {\n  return async dispatch => {\n    console.log(data)\n    await http.patch('/user/profile', data)\n    dispatch({ type: 'profile/updateUser', payload: data })\n  }\n}\n\nconst updateUserPhoto = (data: FormData): AppThunkAction => {\n  return async dispatch => {\n    const res = await http.patch('/user/photo', data)\n    dispatch({\n      type: 'profile/updatePhoto',\n      payload: { photo: res.data.data.photo },\n    })\n  }\n}\n\nconst getUserInfo = (): AppThunkAction => {\n  return async dispatch => {\n    const res = await http.get('/user/profile')\n    dispatch({ type: 'profile/getUserInfo', payload: res.data.data })\n  }\n}\n\n// 获取用户的作品\nconst getUserArticle = (page: number = 1): AppThunkAction => {\n  return async dispatch => {\n    const res = await http.get('/user/articles', {\n      params: {\n        page,\n        per_page: 10,\n      },\n    })\n\n    dispatch({ type: 'profile/getUserArticle', payload: res.data.data })\n  }\n}\n\nconst getUserFigure = (): AppThunkAction => {\n  return async dispatch => {\n    const res = await http.get('/user/figure')\n\n    dispatch({ type: 'profile/getUserFigure', payload: res.data.data })\n  }\n}\n\n// 获取关注 或 关注者\nconst getUserFans = (\n  type: 'followings' | 'followers',\n  page: number\n): AppThunkAction => {\n  return async dispatch => {\n    const res = await http.get(`/user/${type}`, {\n      params: {\n        page,\n        per_page: 10,\n      },\n    })\n    dispatch({\n      type: 'profile/getUserFans',\n      payload: {\n        type,\n        data: res.data.data,\n      },\n    })\n  }\n}\n\n// 我的收藏、阅读历史、我的作品\nconst getUserArticleList = (path: string, page: number): AppThunkAction => {\n  return async dispatch => {\n    const res = await http.get(path, {\n      params: {\n        page,\n        per_page: 10,\n      },\n    })\n\n    dispatch({\n      type: 'profile/getUserArticleList',\n      payload: {\n        type: path,\n        data: res.data.data,\n      },\n    })\n  }\n}\n\nconst typeRecord: {\n  [key: string]: string\n} = {\n  all: '',\n  system: '1',\n  comment: '2',\n  fans: '3',\n  thumbsup: '4',\n}\n// 消息通知 - 全部、评论、点赞\nconst getUserNotification = (type: string, page: number): AppThunkAction => {\n  return async dispatch => {\n    const res = await http.get('/user/notify', {\n      params: {\n        type: typeRecord[type],\n        page,\n        per_page: 10,\n      },\n    })\n\n    dispatch({\n      type: 'profile/getUserNotification',\n      payload: {\n        type,\n        data: res.data.data,\n      },\n    })\n  }\n}\n\nexport {\n  getProfile,\n  getUserInfo,\n  updateUser,\n  updateUserPhoto,\n  getUserArticle,\n  getUserFigure,\n  getUserFans,\n  getUserArticleList,\n  getUserNotification,\n}\n","import { http } from '@/utils'\nimport differenceBy from 'lodash/differenceBy'\nimport type { AppThunkAction } from '../index'\nimport type { Channel } from '@/store/types'\n\n// 频道对应的 key\nconst CHANNEL_KEY = 'geek-h5-home-channel_pip__'\n\n// 获取我的频道数据\nconst getMyChannels = (): AppThunkAction => {\n  return async (dispatch, getState) => {\n    const {\n      login: { token },\n    } = getState()\n\n    // 1. 判断用户是否登录\n    if (token) {\n      // 2. 如果登录了，直接发请求获取该登录用户的频道列表数据\n      const res = await http.get('/user/channels')\n      // console.log('登陆了', res)\n      const { channels } = res.data.data\n      dispatch({ type: 'home/getMyChannels', payload: channels })\n    } else {\n      // 3. 如果没有登录：\n      //    1. 先判断本地缓存中是否有频道数据\n      const localChannels = JSON.parse(\n        localStorage.getItem(CHANNEL_KEY) || '[]'\n      )\n      if (localChannels.length > 0) {\n        //    2. 如果有，直接返回本地缓存中的频道数据\n        dispatch({ type: 'home/getMyChannels', payload: localChannels })\n      } else {\n        //    3. 如果没有，发请求获取默认频道列表数据\n        // 说明：该接口不管是否登录，都可以获取到频道数据\n        //   1 如果你登录了，该接口返回的就是：登录用户的频道列表数据\n        //   2 如果没有登录，该接口返回的就是：默认的频道列表数据\n        const res = await http.get('/user/channels')\n        const { channels } = res.data.data\n        dispatch({ type: 'home/getMyChannels', payload: channels })\n\n        // 因为没有登录，所以，我们在本地缓存中存储一份数据\n        // 将来当未登录用户对频道进行添加、删除操作时，就修改本地的数据\n        localStorage.setItem(CHANNEL_KEY, JSON.stringify(channels))\n      }\n    }\n  }\n}\n\n// 获取所有的频道数据\nconst getChannels = (): AppThunkAction => {\n  return async (dispatch, getState) => {\n    // console.log('getChannels')\n    const res = await http.get('/channels')\n    const { channels: allChannels } = res.data.data\n    // console.log('所有频道数据：', res)\n    // 从 所有频道列表数据 中过滤出 我的频道 中没有的数据，再存储到 redux 中\n    const {\n      home: { channels },\n    } = getState()\n\n    // as typeof channels\n    // 表示 先通过 typeof channels 来拿到 channels 的 TS 类型 Channel[]\n    // 再 as 成 Channel[]\n    let allChannel = allChannels as typeof channels\n\n    // 从 allChannels 数组中排除掉 channels 中的数据\n    const restChannels = differenceBy(allChannel, channels, 'id')\n    // console.log(restChannles)\n    dispatch({ type: 'home/getRestChannels', payload: restChannels })\n  }\n}\n\n// 添加频道\n\nconst addChannel = (channel: Channel): AppThunkAction => {\n  return async (dispatch, getState) => {\n    const {\n      login: { token },\n    } = getState()\n    if (token) {\n      // 登录\n      // 修改接口中的数据\n      await http.patch('/user/channels', {\n        channels: [{ id: channel.id }],\n      })\n\n      // // 更新redux状态，让页面更新\n      // dispatch({ type: 'home/addChannel', payload: channel.id })\n    } else {\n      // 未登录\n      // 修改本地存储中的数据\n      const myChannels = JSON.parse(localStorage.getItem(CHANNEL_KEY) || '[]')\n\n      // console.log('本地的 channel', myChannels)\n\n      // 因为本地存储中，频道数据存的是 我的频道 数据，\n      // 往本地存储中的 频道数据 中添加一项\n      // 而本地没有存储 推荐频道 数据的，所以，不需要再本地存储中对推荐频道数据做处理\n      // 所以，推荐频道数据的处理只在 redux 中更新即可\n      const newMyChannels = [...myChannels, channel]\n      // 将处理后的新我的频道，更新到本地存储中\n      localStorage.setItem(CHANNEL_KEY, JSON.stringify(newMyChannels))\n\n      // // 更新redux状态，让页面更新\n      // dispatch({ type: 'home/addChannel', payload: channel.id })\n    }\n\n    // 更新redux状态，让页面更新\n    dispatch({ type: 'home/addChannel', payload: channel.id })\n  }\n}\n\n// 删除频道\nconst deleteChannel = (channel: Channel): AppThunkAction => {\n  return async (dispatch, getState) => {\n    const {\n      login: { token },\n    } = getState()\n    if (token) {\n      // 登录\n      // 改接口\n      await http.delete(`/user/channels/${channel.id}`)\n    } else {\n      // 未登录\n      // 该本地缓存\n      const myChannels = JSON.parse(\n        localStorage.getItem(CHANNEL_KEY) || '[]'\n      ) as Channel[]\n      const newMyChannels = myChannels.filter(item => item.id !== channel.id)\n      localStorage.setItem(CHANNEL_KEY, JSON.stringify(newMyChannels))\n    }\n\n    // 更新 redux 状态\n    dispatch({ type: 'home/deleteChannel', payload: channel })\n  }\n}\n\n// 切换频道高亮状态\n// 注意：此 action 不涉及任何异步操作，所以，直接使用普通的对象形式的 action 即可\nconst selectTab = (payload: number) => ({ type: 'home/selectTab', payload })\n\n// 获取某个频道的文章列表数据\n// getArticlesByChannelId\n// 第一个参数：表示 频道 id\n// 第二个参数：表示 时间戳，第一次获取数据时，为当前时间；以后的每次获取数据都是前一次返回的 pre_timestamp\nconst getArticles = (channelId: number, timestamp: string): AppThunkAction => {\n  return async dispatch => {\n    // console.log(channelId)\n    const res = await http.get('/articles', {\n      params: {\n        channel_id: channelId,\n        timestamp,\n      },\n    })\n\n    // 为接口返回的两个数据重命名\n    const { pre_timestamp: prevTime, results: list } = res.data.data\n\n    // 将数据存储到 redux 中\n    dispatch({\n      type: 'home/getArticles',\n      payload: { prevTime, list, channelId },\n    })\n  }\n}\n\n// 触底获取更多文章数据\nconst getMoreArticles = (\n  channelId: number,\n  timestamp: string\n): AppThunkAction => {\n  return async dispatch => {\n    const res = await http.get('/articles', {\n      params: {\n        channel_id: channelId,\n        timestamp,\n      },\n    })\n\n    // 为接口返回的两个数据重命名\n    const { pre_timestamp: prevTime, results: list } = res.data.data\n\n    // 将数据存储到 redux 中\n    dispatch({\n      type: 'home/getMoreArticles',\n      payload: { prevTime, list, channelId },\n    })\n  }\n}\n\n// 文章列表页面 - 更新评论数量\nexport const updateCommentMount = (\n  channelId: number,\n  articleId: string\n): AppThunkAction => {\n  return async (dispatch, getState) => {\n    const {\n      article: {\n        info: { comm_count },\n      },\n    } = getState()\n    dispatch({\n      type: 'home/updateCommentMount',\n      payload: {\n        channelId,\n        articleId,\n        comm_count,\n      },\n    })\n  }\n}\n\nexport {\n  getMyChannels,\n  getChannels,\n  addChannel,\n  deleteChannel,\n  selectTab,\n  getArticles,\n  getMoreArticles,\n}\n","import { http } from '@/utils'\nimport {\n  AddArticleCommentResp,\n  ArticleCommentResponse,\n  ArticleResponse,\n} from '../data'\nimport { AppThunkAction } from '../index'\n\n// 根据文章id获取文章详情\nconst getArticleById = (id: string): AppThunkAction => {\n  return async dispatch => {\n    const res = await http.get<ArticleResponse>(`/articles/${id}`)\n\n    dispatch({ type: 'article/getArticleById', payload: res.data.data })\n  }\n}\n\n// 获取文章评论\nconst getArticleComment = (type: string, id: string): AppThunkAction => {\n  return async dispatch => {\n    const res = await http.get<ArticleCommentResponse>('/comments', {\n      params: {\n        type,\n        source: id,\n      },\n    })\n\n    dispatch({ type: 'article/getArticleComment', payload: res.data.data })\n  }\n}\n\n// 获取更多文章评论数据\nconst getMoreArticleComments = (\n  type: string,\n  id: string,\n  offset: string\n): AppThunkAction => {\n  return async dispatch => {\n    const res = await http.get<ArticleCommentResponse>('/comments', {\n      params: {\n        type,\n        source: id,\n        offset,\n      },\n    })\n\n    dispatch({ type: 'article/getMoreArticleComments', payload: res.data.data })\n  }\n}\n\n// 关注 or 取消关注作者\nconst followArticleAuthor = (\n  aut_id: string,\n  is_followed: boolean\n): AppThunkAction => {\n  return async dispatch => {\n    // 判断当前是否关注\n    if (is_followed) {\n      // 取消关注\n      await http.delete(`/user/followings/${aut_id}`)\n    } else {\n      // 关注\n      await http.post('/user/followings', {\n        target: aut_id,\n      })\n    }\n\n    dispatch({\n      type: 'article/updateInfo',\n      payload: {\n        // name 表示要修改状态中的哪个属性\n        name: 'is_followed',\n        // value 表示要修改成哪个值\n        value: !is_followed,\n      },\n    })\n  }\n}\n\n// 收藏 or 取消收藏文章\nconst collectArticle = (\n  art_id: string,\n  is_collected: boolean\n): AppThunkAction => {\n  return async dispatch => {\n    // 判断当前是否收藏\n    if (is_collected) {\n      // 取消收藏\n      http.delete(`/article/collections/${art_id}`)\n    } else {\n      // 收藏\n      http.post('/article/collections', {\n        target: art_id,\n      })\n    }\n\n    dispatch({\n      type: 'article/updateInfo',\n      payload: {\n        // name 表示要修改状态中的哪个属性\n        name: 'is_collected',\n        // value 表示要修改成哪个值\n        value: !is_collected,\n      },\n    })\n  }\n}\n\n// 点赞 or 取消点赞文章\nconst likeArticle = (art_id: string, attitude: number): AppThunkAction => {\n  return async dispatch => {\n    // 判断当前是否点赞\n    // 如果是 1 表示已点赞\n    if (attitude === 1) {\n      // 取消点赞\n      await http.delete(`/article/likings/${art_id}`)\n    } else {\n      // 点赞\n      await http.post('/article/likings', {\n        target: art_id,\n      })\n    }\n\n    dispatch({\n      type: 'article/updateInfo',\n      payload: {\n        // name 表示要修改状态中的哪个属性\n        name: 'attitude',\n        // value 表示要修改成哪个值\n        value: attitude === 1 ? 0 : 1,\n      },\n    })\n  }\n}\n\n// 对文章发表评论\nconst sendComment = (target: string, content: string): AppThunkAction => {\n  return async dispatch => {\n    // 注意：接口文章不对，应该根据实际返回的数据来处理\n    const res = await http.post<AddArticleCommentResp>('/comments', {\n      target,\n      content,\n    })\n\n    dispatch({ type: 'article/sendComment', payload: res.data.data })\n  }\n}\n\n// 更新评论的数量\nconst updateCommentCount = (\n  commentId: string,\n  total: number\n): AppThunkAction => {\n  return async dispatch => {\n    dispatch({\n      type: 'article/updateCommentCount',\n      payload: {\n        commentId,\n        total,\n      },\n    })\n  }\n}\n\n// 点赞 or 取消点赞评论\nconst likeComment = (art_id: string, is_liking: boolean): AppThunkAction => {\n  return async dispatch => {\n    if (is_liking) {\n      // 取消点赞\n      await http.delete(`/comment/likings/${art_id}`)\n    } else {\n      // 点赞\n      await http.post('/comment/likings', {\n        target: art_id,\n      })\n    }\n\n    dispatch({\n      type: 'comment/updateInfo',\n      payload: {\n        // name 表示要修改状态中的哪个属性\n        name: 'is_liking',\n        // value 表示要修改成哪个值\n        value: !is_liking,\n        // 评论 id\n        target: art_id,\n        // 数量\n        like_count: is_liking ? -1 : 1,\n      },\n    })\n  }\n}\n\nexport {\n  getArticleById,\n  getArticleComment,\n  getMoreArticleComments,\n  followArticleAuthor,\n  collectArticle,\n  likeArticle,\n  sendComment,\n  updateCommentCount,\n  likeComment,\n}\n","import { useState, useRef, useEffect } from 'react'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport { Toast, NavBar, Input, Form, Button } from 'antd-mobile'\n\nimport InputExtra from './components/input-extra'\nimport classNames from 'classnames'\n\nimport { useDispatch } from 'react-redux'\nimport { sendCode, login } from '@/store/actions'\n\nimport styles from './index.module.scss'\n\nimport { AxiosError } from 'axios'\nimport { InputRef } from 'antd-mobile/es/components/input'\n\ntype LoginForm = {\n  mobile: string\n  code: string\n}\n\nconst Login = () => {\n  const [form] = Form.useForm<LoginForm>()\n  // 获取location\n  // 注意：此处的泛型用来为 location.state 指定类型\n  //      但是一定要注意：state 可能有值，也可以没有值，所以，它的类型中带有 undefined\n  const location = useLocation<{ from: string } | undefined>()\n\n  // 拿到 dispatch 分发动作的函数\n  const dispatch = useDispatch()\n\n  // 主动调用 useHistory() 来获取路由的 history 对象\n  const history = useHistory()\n  // 倒计时的时间，单位是 秒\n  const [time, setTime] = useState(0)\n  // 定时器 id\n  const timerIdRef = useRef(-1)\n  // 用来存储手机号码对应的文本框 DOM 元素\n  const mobileRef = useRef<InputRef>(null)\n\n  const [, forceUpdate] = useState({})\n  // To disable submit button at the beginning.\n  useEffect(() => {\n    forceUpdate({})\n  }, [])\n\n  // 发送请求获取验证码\n  const getCode = async () => {\n    // 判断剩余秒数，如果剩余秒数小于 0 就允许再次发送\n    // 如果剩余秒数大于等于 0 就不允许再次发送\n    if (time > 0) return\n\n    // 如果 mobile 没有值，拿到的是 undefined\n    const mobile = form.getFieldValue('mobile')\n    if (mobile === undefined || form.getFieldError('mobile').length > 0) {\n      // 手机号码对应文本框 DOM 元素\n      const mobileInputDOM = mobileRef.current\n      // focus() 就是用来获得焦点的一个方法，是 DOM 元素自己提供的\n      mobileInputDOM?.focus()\n      return Toast.show({\n        content: '请输入正确的手机号',\n        duration: 1000,\n      })\n    }\n\n    // 将倒计时时间，更新为：60\n    setTime(59)\n    clearInterval(timerIdRef.current)\n    timerIdRef.current = window.setInterval(() => {\n      setTime(time => {\n        if (time === 1) {\n          clearInterval(timerIdRef.current)\n        }\n        return time - 1\n      })\n    }, 1000)\n\n    // 手机号码验证成功：\n    dispatch(sendCode(mobile))\n  }\n\n  const onFinsih = async (values: LoginForm) => {\n    try {\n      // 此处，使用 await 可以做到：等到 dispatch 分发的异步action执行完成后，\n      // 再执行后面的代码\n      // dispatch 后会执行一个异步操作\n      await dispatch(login(values))\n\n      // 如果异步操作成功了，会执行改代码\n      Toast.show({\n        content: '登录成功',\n        duration: 600,\n        afterClose: () => {\n          // 清理定时器\n          clearInterval(timerIdRef.current)\n\n          // 判断 state 是否有值\n          if (location.state?.from) {\n            // 重定向过来的，就返回原来的页面\n            history.replace(location.state.from)\n          } else {\n            // 默认，返回首页\n            history.replace('/home')\n          }\n        },\n      })\n    } catch (e) {\n      // 处理 axios 请求的错误\n      const error = e as AxiosError<{ message: string }>\n      // 如果异步操作失败了，会执行此处的错误处理\n      Toast.show({\n        content: error.response?.data?.message,\n        duration: 1000,\n      })\n    }\n  }\n\n  return (\n    <div className={styles.root}>\n      {/* 导航栏组件 */}\n      <NavBar onBack={() => history.go(-1)} />\n      <h1 className=\"title\">账号登录</h1>\n\n      <div className=\"login-wrap\">\n        <Form form={form} onFinish={onFinsih}>\n          <Form.Item\n            name=\"mobile\"\n            rules={[\n              { required: true, message: '手机号为必填项' },\n              {\n                pattern: /^1[3-9]\\d{9}$/,\n                message: '手机号码格式不正确',\n              },\n            ]}\n          >\n            <Input placeholder=\"请输入手机号\" ref={mobileRef} />\n          </Form.Item>\n\n          <Form.Item\n            name=\"code\"\n            rules={[\n              { required: true, message: '验证码为必填项' },\n              {\n                pattern: /^\\d{6}$/,\n                message: '验证码不正确',\n              },\n            ]}\n          >\n            <InputExtra\n              extra={time <= 0 ? '发送验证码' : `${time}s`}\n              onExtra={getCode}\n            />\n          </Form.Item>\n          <Form.Item noStyle shouldUpdate>\n            {form => {\n              // https://ant-design.gitee.io/components/form-cn/#components-form-demo-inline-login\n              // isFieldsTouched(true) 检查是否所有字段都被操作过\n              // getFieldsError() 获取所有字段名对应的错误信息\n              const disabled =\n                !form.isFieldsTouched(true) ||\n                form.getFieldsError().filter(({ errors }) => errors.length)\n                  .length !== 0\n\n              return (\n                <Button\n                  block\n                  disabled={disabled}\n                  type=\"submit\"\n                  className={classNames('login-button')}\n                >\n                  登录\n                </Button>\n              )\n            }}\n          </Form.Item>\n          <Form.Item noStyle>\n            <div\n              style={{\n                marginTop: 20,\n                textAlign: 'center',\n              }}\n            >\n              验证码：246810\n            </div>\n          </Form.Item>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default Login\n","import classnames from 'classnames'\n\n// 组件的 props 是一个对象\ntype Props = {\n  type: string\n  // 可选属性\n  className?: string\n  onClick?: () => void\n}\n\n// 为 组件 props 指定类型\nconst Icon = ({ type, className, onClick }: Props) => {\n  return (\n    <svg\n      className={classnames('icon', className)}\n      aria-hidden=\"true\"\n      onClick={onClick}\n    >\n      <use xlinkHref={`#${type}`}></use>\n    </svg>\n  )\n}\n\nexport default Icon\n","import React, { ReactElement, useEffect, useRef } from 'react'\nimport { RouteProps, Route, useLocation, matchPath } from 'react-router-dom'\nimport styles from './index.module.scss'\n\nexport const PreviousRoute = ({ children, ...rest }: RouteProps) => {\n  const prevPathRef = useRef('')\n  const location = useLocation()\n\n  useEffect(() => {\n    prevPathRef.current = location.pathname\n  }, [location.pathname])\n\n  return (\n    <Route\n      {...rest}\n      children={props => {\n        const child = children as ReactElement\n        const isMatch = props.match !== null\n        const matched = matchPath(prevPathRef.current, '/article/:id')\n\n        const childWithPrevPathname = React.cloneElement(child, {\n          prevRoute: {\n            prevPathname: prevPathRef.current,\n            params: matched?.params ?? {},\n          },\n        })\n\n        return (\n          <div\n            className={styles.root}\n            style={{ display: isMatch ? 'block' : 'none' }}\n          >\n            {childWithPrevPathname}\n          </div>\n        )\n      }}\n    />\n  )\n}\n","import { useState, useEffect } from 'react'\nimport classnames from 'classnames'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {\n  getChannels,\n  addChannel,\n  deleteChannel,\n  selectTab\n} from '@/store/actions'\n\nimport Icon from '@/components/Icon'\nimport styles from './index.module.scss'\nimport { AppState } from '@/store'\nimport { Channel } from '@/store/types'\n\ntype Props = {\n  onClose: () => void\n}\n\nconst Channels = ({ onClose }: Props) => {\n  // 拿到 dispatch\n  const dispatch = useDispatch()\n  // 拿 redux 中的频道数据\n  const { channels, restChannels, channelActiveIndex } = useSelector(\n    (state: AppState) => state.home\n  )\n  const [isEdit, setIsEdit] = useState(false)\n\n  useEffect(() => {\n    dispatch(getChannels())\n  }, [dispatch])\n\n  // 添加频道\n  const onAddChannel = (item: Channel) => {\n    dispatch(addChannel(item))\n  }\n\n  // 切换编辑状态\n  const onChangeEdit = () => {\n    setIsEdit(!isEdit)\n  }\n\n  // 我的频道点击事件\n  const onMyChannelClick = (item: Channel, index: number) => {\n    // 判断是否为编辑状态\n    if (isEdit) {\n      // 要执行的操作：删除\n      dispatch(deleteChannel(item))\n    } else {\n      // 要执行的操作：切换\n      dispatch(selectTab(index))\n      // 关闭抽屉\n      onClose()\n    }\n  }\n\n  return (\n    <div className={styles.root}>\n      <div className=\"channel-header\">\n        <Icon type=\"iconbtn_channel_close\" onClick={onClose} />\n      </div>\n      <div className=\"channel-content\">\n        <div className={classnames('channel-item', isEdit ? 'edit' : '')}>\n          <div className=\"channel-item-header\">\n            <span className=\"channel-item-title\">我的频道</span>\n            <span className=\"channel-item-title-extra\">点击进入频道</span>\n            <span className=\"channel-item-edit\" onClick={onChangeEdit}>\n              {isEdit ? '保存' : '编辑'}\n            </span>\n          </div>\n          <div className=\"channel-list\">\n            {channels.map((item, index) => {\n              return (\n                // selected 类名表示选中项高亮\n                <span\n                  onClick={() => onMyChannelClick(item, index)}\n                  key={item.id}\n                  className={classnames(\n                    'channel-list-item',\n                    index === channelActiveIndex ? 'selected' : ''\n                  )}\n                >\n                  {item.name}\n                  <Icon type=\"iconbtn_tag_close\" />\n                </span>\n              )\n            })}\n          </div>\n        </div>\n\n        <div className=\"channel-item\">\n          <div className=\"channel-item-header\">\n            <span className=\"channel-item-title\">频道推荐</span>\n            <span className=\"channel-item-title-extra\">点击添加频道</span>\n          </div>\n          <div className=\"channel-list\">\n            {restChannels.map(item => (\n              <span\n                key={item.id}\n                className=\"channel-list-item\"\n                onClick={() => onAddChannel(item)}\n              >\n                + {item.name}\n              </span>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Channels\n","import { useEffect, memo } from 'react'\nimport classnames from 'classnames'\nimport { useState, useRef } from 'react'\n\nimport Icon from '../Icon'\n\nimport styles from './index.module.scss'\n\ntype Props = {\n  src: string\n  className?: string\n}\n\nconst Image = memo(({ src, className }: Props) => {\n  const [isError, setIsError] = useState(false)\n  const [isLoading, setIsLoading] = useState(true)\n  const imgRef = useRef(null)\n\n  // 图片加载完成\n  const onLoad = () => {\n    setIsLoading(false)\n  }\n\n  // 图片加载失败\n  const onError = () => {\n    setIsError(true)\n  }\n\n  // 渲染 loading or error 占位符\n  const renderPlaceholder = () => {\n    if (isError) {\n      return (\n        <div className=\"image-icon\">\n          <Icon type=\"iconphoto-fail\" />\n        </div>\n      )\n    }\n\n    if (isLoading) {\n      return (\n        <div className=\"image-icon\">\n          <Icon type=\"iconphoto\" />\n        </div>\n      )\n    }\n\n    return null\n  }\n\n  const renderImage = () => {\n    if (isError) return null\n\n    return (\n      <img\n        ref={imgRef}\n        data-src={src}\n        onLoad={onLoad}\n        onError={onError}\n        alt=\"\"\n      />\n    )\n  }\n\n  // 图片懒加载\n  useEffect(() => {\n    const imageObserver = new IntersectionObserver(\n      (entries, imgObserver) => {\n        entries.forEach(entry => {\n          if (entry.isIntersecting) {\n            const lazyImage = entry.target as HTMLImageElement\n            lazyImage.src = lazyImage.dataset.src!\n\n            // 当图片加载完成了，此时，就没有必要再监听图片，因此，取消监听即可\n            // 取消监听\n            imgObserver.unobserve(lazyImage)\n          }\n        })\n      },\n      {\n        // 表示 图片加载 百分比，就出发监听。比如，如果为 0 表示刚刚出现图片，就出发监听\n        // threshold: [0]\n        // 10px 表示提前加载该图片\n        rootMargin: '0px 0px 10px 0px'\n      }\n    )\n\n    imageObserver.observe(imgRef.current!)\n\n    return () => imageObserver.disconnect()\n  }, [])\n\n  return (\n    <div className={classnames(styles.root, className)}>\n      {renderPlaceholder()}\n      {renderImage()}\n    </div>\n  )\n})\n\nexport default Image\n","import classnames from 'classnames'\n\nimport dayjs from 'dayjs'\nimport relativeTime from 'dayjs/plugin/relativeTime'\nimport 'dayjs/locale/zh-cn'\n\nimport Icon from '@/components/Icon'\nimport Image from '@/components/Image'\n// import { Image } from 'antd-mobile'\n\nimport styles from './index.module.scss'\n\n// 将 dayjs 中的语言设置为中文\ndayjs.locale('zh-cn')\n// 通过 dayjs 的 extend 方法，来扩展了一个插件\n// 插件的作用：可以显示 相对时间\ndayjs.extend(relativeTime)\n\ntype Props = {\n  type: number\n  title: string\n  images: string[]\n  aut_name: string\n  comm_count: number\n  pubdate: string\n\n  isLogin?: boolean\n  onFeedback?: () => void\n}\n\nconst ArticleItem = ({\n  type,\n  title,\n  images,\n  aut_name,\n  comm_count,\n  pubdate,\n  isLogin,\n  onFeedback\n}: Props) => {\n  return (\n    <div className={styles.root}>\n      <div\n        className={classnames(\n          'article-content',\n          type === 3 ? 't3' : '',\n          type === 0 ? 'none-mt' : ''\n        )}\n      >\n        <h3>{title}</h3>\n        {type !== 0 && (\n          <div className=\"article-imgs\">\n            {images.map((item, i) => (\n              <div className=\"article-img-wrapper\" key={i}>\n                {/* <img src={item} alt=\"\" /> */}\n                <Image src={item} />\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n      <div className={classnames('article-info', type === 0 ? 'none-mt' : '')}>\n        <span>{aut_name}</span>\n        <span>{comm_count} 评论</span>\n        <span>{dayjs().from(pubdate)}</span>\n        {isLogin && (\n          <span className=\"close\" onClick={onFeedback}>\n            <Icon type=\"iconbtn_essay_close\" />\n          </span>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default ArticleItem\n","import React, { useState, useRef, useEffect } from 'react'\nimport { useParams, useHistory } from 'react-router-dom'\nimport { Popup, Toast, NavBar, InfiniteScroll } from 'antd-mobile'\n\nimport dayjs from 'dayjs'\nimport DOMPurify from 'dompurify'\nimport hljs from 'highlight.js'\nimport 'highlight.js/styles/vs2015.css'\nimport ContentLoader from 'react-content-loader'\n\nimport Icon from '@/components/Icon'\nimport Sticky from '@/components/Sticky'\nimport NoneComment from '@/components/NoneComment'\nimport CommentItem from './components/CommentItem'\nimport CommentInput from './components/CommentInput'\nimport CommentFooter from './components/CommentFooter'\n\nimport Reply from './components/Reply'\nimport Share from './components/Share'\n\nimport styles from './index.module.scss'\nimport classNames from 'classnames'\nimport { useDispatch, useSelector } from 'react-redux'\n// throttle 节流函数\nimport throttle from 'lodash/throttle'\n\nimport {\n  getArticleById,\n  getArticleComment,\n  getMoreArticleComments,\n  followArticleAuthor,\n  collectArticle,\n  likeArticle,\n  sendComment,\n  updateCommentCount,\n  likeComment,\n} from '@/store/actions'\nimport { AppState } from '@/store'\nimport { ArtComment } from '@/store/data'\nimport { AxiosError } from 'axios'\n\n// 创建枚举，来表示评论类型\nenum CommentType {\n  Article = 'a',\n  Comment = 'c',\n}\n\nconst Article = () => {\n  const dispatch = useDispatch()\n  const history = useHistory()\n  // 文章评论抽屉的展示或隐藏\n  const [commentOpen, setCommentOpen] = useState(false)\n  const [replyOpen, setReplyOpen] = useState<{\n    visible: boolean\n    data: ArtComment\n  }>({\n    // 表示是否展示抽屉\n    visible: false,\n    // 表示给抽屉传递的额外数据\n    data: {} as ArtComment,\n  })\n  const [shareOpen, setShareOpen] = useState(false)\n  const [isArticleLoading, setIsArticleLoading] = useState(true)\n\n  const [showNavAuthor, setShowNavAuthor] = useState(false)\n  const authorRef = useRef<HTMLDivElement>(null)\n  const wrapperRef = useRef<HTMLDivElement>(null)\n  const commentRef = useRef<HTMLDivElement>(null)\n  // 是否展示评论内容\n  const isShowComment = useRef(false)\n\n  // 控制加载更多评论\n  const loadStateRef = useRef(false)\n\n  // 从 redux 中获取到文章详情\n  const { info, comment } = useSelector<AppState, AppState['article']>(\n    state => state.article\n  )\n\n  // list 列表\n  const { id } = useParams<{ id: string }>()\n\n  // 获取文章详情\n  useEffect(() => {\n    const loadData = async () => {\n      // 发送请求，获取获取文章详情\n      await dispatch(getArticleById(id))\n      // 文章详情加载完成后，将 加载中状态设置为 false\n      setIsArticleLoading(false)\n    }\n    loadData()\n  }, [dispatch, id])\n\n  // 获取评论数据\n  useEffect(() => {\n    dispatch(getArticleComment(CommentType.Article, id))\n    // dispatch(getArticleComment('a', id))\n  }, [dispatch, id])\n\n  // 处理文章内容中的代码高亮\n  useEffect(() => {\n    if (isArticleLoading) return\n\n    const dgHtml = document.querySelector('.dg-html')!\n    const codes = dgHtml.querySelectorAll('pre code')\n\n    hljs.configure({\n      // 忽略警告\n      ignoreUnescapedHTML: true,\n    })\n\n    if (codes.length > 0) {\n      codes.forEach(block => {\n        const element = block as HTMLElement\n        hljs.highlightElement(element)\n      })\n      return\n    }\n\n    const pre = dgHtml.querySelectorAll('pre')\n    if (pre.length > 0) {\n      pre.forEach(block => {\n        hljs.highlightElement(block)\n      })\n    }\n  }, [isArticleLoading])\n\n  // 导航栏中展示作者信息\n  useEffect(() => {\n    // 如果文章加载中，此时，页面中没有文章详情的 DOM 结构\n    // 所以，如果加载中，直接 return 即可\n    if (isArticleLoading) return\n\n    const wrapperDOM = wrapperRef.current!\n\n    // 创建一个节流函数\n    const handleScroll = throttle(() => {\n      const { bottom } = authorRef.current!.getBoundingClientRect()\n      // 44 是 NavBar 的高度，因为 NavBar 会挡住页面内容，所以，此处得减去它的高度\n      if (bottom - 44 <= 0) {\n        setShowNavAuthor(true)\n      } else {\n        setShowNavAuthor(false)\n      }\n    }, 200)\n\n    wrapperDOM.addEventListener('scroll', handleScroll)\n    return () => wrapperDOM.removeEventListener('scroll', handleScroll)\n  }, [isArticleLoading])\n\n  const onCloseReplyWithUpdate = (commentId: string, total: number) => {\n    // 修改redux中的评论列表数据\n    dispatch(updateCommentCount(commentId, total))\n    onCloseReply()\n  }\n  const onCloseReply = () => {\n    setReplyOpen({\n      ...replyOpen,\n      visible: false,\n    })\n  }\n  const onCloseComment = () => {\n    setCommentOpen(false)\n  }\n\n  // 加载更多评论数据\n  const loadMoreComments = async () => {\n    // last_id\n    const { last_id } = comment\n\n    if (loadStateRef.current) return\n    loadStateRef.current = true\n    await dispatch(getMoreArticleComments(CommentType.Article, id, last_id!))\n    loadStateRef.current = false\n  }\n\n  // 关注 or 取消关注 -- 作者\n  const onFollow = async () => {\n    try {\n      await dispatch(followArticleAuthor(info.aut_id, info.is_followed))\n      Toast.show(info.is_followed ? '取消关注' : '已关注')\n    } catch (e) {\n      const error = e as AxiosError<{ message: string }>\n      Toast.show({\n        content: error.response?.data?.message,\n        duration: 1000,\n      })\n    }\n  }\n\n  // 收藏 or 取消收藏 -- 文章\n  const onCollected = async () => {\n    await dispatch(collectArticle(info.art_id, info.is_collected))\n    Toast.show(info.is_collected ? '取消收藏' : '已收藏')\n  }\n\n  // 点赞 或 取消点赞 -- 文章\n  const onLike = async () => {\n    await dispatch(likeArticle(info.art_id, info.attitude))\n    Toast.show(info.attitude ? '取消点赞' : '已点赞')\n  }\n\n  // 展示 or 隐藏评论内容\n  const onShowComment = () => {\n    const wrapperDOM = wrapperRef.current!\n    const commentDOM = commentRef.current!\n    const { top } = commentDOM.getBoundingClientRect()\n\n    if (!isShowComment.current) {\n      // 跳转到评论位置\n      wrapperDOM.scrollTo(0, top - 44 + wrapperDOM.scrollTop)\n      isShowComment.current = true\n    } else {\n      // 跳转到页面顶部\n      wrapperDOM.scrollTo(0, 0)\n      isShowComment.current = false\n    }\n  }\n\n  // 打开文章评论的抽屉\n  const onComment = () => setCommentOpen(true)\n\n  // 对文章发表评论\n  const onInsertComment = async (content: string) => {\n    await dispatch(sendComment(info.art_id, content))\n    // 关闭评论抽屉\n    onCloseComment()\n  }\n\n  // 打开评论的回复抽屉\n  const onOpenReply = (data: ArtComment) => {\n    setReplyOpen({\n      visible: true,\n      data,\n    })\n  }\n\n  // 对评论点赞\n  const onThumbsUp = async (id: string, is_liking: boolean) => {\n    await dispatch(likeComment(id, is_liking))\n  }\n\n  // 文章\n  const {\n    art_id,\n    attitude,\n    // aut_id,\n    aut_name,\n    aut_photo,\n    comm_count: articleCommCount,\n    content,\n    is_collected,\n    is_followed,\n    like_count,\n    pubdate,\n    read_count,\n    title,\n  } = info\n\n  // 文章评论\n  const { results, end_id, last_id } = comment\n  const comm_count = Math.max(articleCommCount, results.length)\n  // 是否有更多评论\n  const hasMoreComment = end_id !== last_id\n\n  const date = dayjs(pubdate).format('YYYY-MM-DD')\n\n  const renderArticle = () => {\n    if (isArticleLoading) {\n      // loading\n      return (\n        <ContentLoader\n          speed={2}\n          width={375}\n          height={230}\n          viewBox=\"0 0 375 230\"\n          backgroundColor=\"#f3f3f3\"\n          foregroundColor=\"#ecebeb\"\n        >\n          {/* https://skeletonreact.com/ */}\n          <rect x=\"16\" y=\"8\" rx=\"3\" ry=\"3\" width=\"340\" height=\"10\" />\n          <rect x=\"16\" y=\"26\" rx=\"0\" ry=\"0\" width=\"70\" height=\"6\" />\n          <rect x=\"96\" y=\"26\" rx=\"0\" ry=\"0\" width=\"50\" height=\"6\" />\n          <rect x=\"156\" y=\"26\" rx=\"0\" ry=\"0\" width=\"50\" height=\"6\" />\n          <circle cx=\"33\" cy=\"69\" r=\"17\" />\n          <rect x=\"60\" y=\"65\" rx=\"0\" ry=\"0\" width=\"45\" height=\"6\" />\n          <rect x=\"304\" y=\"65\" rx=\"0\" ry=\"0\" width=\"52\" height=\"6\" />\n          <rect x=\"16\" y=\"114\" rx=\"0\" ry=\"0\" width=\"340\" height=\"15\" />\n          <rect x=\"263\" y=\"208\" rx=\"0\" ry=\"0\" width=\"94\" height=\"19\" />\n          <rect x=\"16\" y=\"141\" rx=\"0\" ry=\"0\" width=\"340\" height=\"15\" />\n          <rect x=\"16\" y=\"166\" rx=\"0\" ry=\"0\" width=\"340\" height=\"15\" />\n        </ContentLoader>\n      )\n    }\n\n    // 文章详情\n    return (\n      <div className=\"wrapper\" ref={wrapperRef}>\n        <div className=\"article-wrapper\">\n          <div className=\"header\">\n            <h1 className=\"title\">{title}</h1>\n\n            <div className=\"info\">\n              <span>{date}</span>\n              <span>{read_count} 阅读</span>\n              <span>{comm_count} 评论</span>\n            </div>\n\n            <div className=\"author\" ref={authorRef}>\n              <img src={aut_photo} alt=\"\" />\n              <span className=\"name\">{aut_name}</span>\n              <span\n                className={classNames('follow', is_followed ? 'followed' : '')}\n                onClick={onFollow}\n              >\n                {is_followed ? '已关注' : '关注'}\n              </span>\n            </div>\n          </div>\n\n          <div className=\"content\">\n            <div\n              className=\"content-html dg-html\"\n              dangerouslySetInnerHTML={{\n                __html: DOMPurify.sanitize(content),\n              }}\n            />\n            <div className=\"date\">发布文章时间：{date}</div>\n          </div>\n        </div>\n\n        <div className=\"comment\" ref={commentRef}>\n          <Sticky root={wrapperRef.current!} height={51} offset={44}>\n            <div className=\"comment-header\">\n              <span>全部评论（{comm_count}）</span>\n              <span>{like_count} 点赞</span>\n            </div>\n          </Sticky>\n          {comm_count === 0 ? (\n            <NoneComment />\n          ) : (\n            <div className=\"comment-list\">\n              {results.map(item => {\n                return (\n                  <CommentItem\n                    key={item.com_id}\n                    {...item}\n                    onOpenReply={() => onOpenReply(item)}\n                    onThumbsUp={() => onThumbsUp(item.com_id, item.is_liking)}\n                  />\n                )\n              })}\n\n              {/* 加载更多评论数据 */}\n              <InfiniteScroll\n                hasMore={hasMoreComment}\n                loadMore={loadMoreComments}\n              />\n            </div>\n          )}\n        </div>\n      </div>\n    )\n  }\n\n  // 渲染评论抽屉\n  const renderCommentDrawer = () => {\n    return (\n      <Popup\n        className=\"comment-popup\"\n        position=\"bottom\"\n        visible={commentOpen}\n        onMaskClick={onCloseComment}\n      >\n        <div className=\"comment-popup-wrapper\">\n          {commentOpen && (\n            <CommentInput\n              onClose={onCloseComment}\n              onComment={onInsertComment}\n            />\n          )}\n        </div>\n      </Popup>\n    )\n  }\n\n  // 渲染回复抽屉\n  const renderReplyDrawer = () => {\n    return (\n      <Popup\n        className=\"reply-popup\"\n        position=\"right\"\n        visible={replyOpen.visible}\n        onMaskClick={onCloseReply}\n        forceRender\n      >\n        <div className=\"reply-popup-wrapper\">\n          {replyOpen.visible && (\n            <Reply\n              // data 就是你要回复的评论数据\n              data={replyOpen.data}\n              art_id={art_id}\n              onClose={onCloseReplyWithUpdate}\n              onReplyThumbsUp={onThumbsUp}\n            />\n          )}\n        </div>\n      </Popup>\n    )\n  }\n\n  // 渲染更多操作抽屉\n  const renderMoreDrawer = () => {\n    return (\n      <Popup\n        position=\"bottom\"\n        visible={shareOpen}\n        onMaskClick={() => setShareOpen(false)}\n      >\n        <Share onClose={() => setShareOpen(false)} />\n      </Popup>\n    )\n  }\n\n  return (\n    <div className={styles.root}>\n      <div className=\"root-wrapper\">\n        <NavBar\n          onBack={() => history.go(-1)}\n          right={\n            <span onClick={() => setShareOpen(true)}>\n              <Icon type=\"icongengduo\" />\n            </span>\n          }\n        >\n          {showNavAuthor && (\n            <div className=\"nav-author\">\n              <img src={aut_photo} alt=\"\" />\n              <span className=\"name\">{aut_name}</span>\n              <span\n                onClick={onFollow}\n                className={classNames('follow', is_followed ? 'followed' : '')}\n              >\n                {is_followed ? '已关注' : '关注'}\n              </span>\n            </div>\n          )}\n        </NavBar>\n        {/* 文章详情和评论 */}\n        {renderArticle()}\n\n        {/* 底部评论栏 */}\n        <CommentFooter\n          comm_count={comm_count}\n          placeholder={comm_count === 0 ? '抢沙发' : '去评论'}\n          attitude={attitude}\n          is_collected={is_collected}\n          onShare={() => setShareOpen(true)}\n          onComment={onComment}\n          onLike={onLike}\n          onCollected={onCollected}\n          onShowComment={onShowComment}\n        />\n      </div>\n\n      {/* 评论 */}\n      {renderCommentDrawer()}\n      {/* 回复 */}\n      {renderReplyDrawer()}\n      {/* 更多 */}\n      {renderMoreDrawer()}\n    </div>\n  )\n}\n\nexport default Article\n","import { PullToRefresh, InfiniteScroll } from 'antd-mobile'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport {\n  getArticles,\n  getMoreArticles,\n  updateCommentMount,\n} from '@/store/actions'\n\n// import MoreAction from '../MoreAction'\nimport ArticleItem from '@/components/ArticleItem'\n\nimport styles from './index.module.scss'\nimport { useHistory, useLocation } from 'react-router'\nimport { AppState } from '@/store'\nimport { useEffect, useRef } from 'react'\n\ntype Props = {\n  channelId: number\n  activeId: number\n  detailParams: {\n    isMatch: boolean\n    params: {\n      [k in string]: string\n    }\n  }\n}\n\n// 该组件会接受到两个属性，分别是：\n// channelId -> 频道的 id 值\n// activeId -> 当前选中的频道 id 值\nconst ArticleList = ({ channelId, activeId, detailParams }: Props) => {\n  const loaction = useLocation()\n  const history = useHistory()\n  // dispatch\n  const dispatch = useDispatch()\n  // 是否下拉刷新中的状态\n  // 获取 redux 中的状态\n  const { articles } = useSelector((state: AppState) => state.home)\n\n  // 根据当前频道id获取文章数据\n  const channelArticle = articles[channelId] ?? {}\n  const { prevTime, list } = channelArticle\n  const isUpdatedCommentMount = useRef(false)\n\n  useEffect(() => {\n    const update = async () => {\n      // 如果是从详情页面过来的，需要更新评论数量\n      if (\n        channelId === activeId &&\n        detailParams.isMatch &&\n        !isUpdatedCommentMount.current\n      ) {\n        isUpdatedCommentMount.current = true\n        await dispatch(updateCommentMount(channelId, detailParams.params.id))\n\n        setTimeout(() => {\n          isUpdatedCommentMount.current = false\n        }, 0)\n      }\n    }\n    update()\n  }, [channelId, activeId, detailParams, dispatch])\n\n  const loadMore = async () => {\n    await dispatch(getMoreArticles(channelId, prevTime || +new Date() + ''))\n  }\n\n  // 下拉刷新文章列表\n  const onRefresh = async () => {\n    await dispatch(getArticles(channelId, +new Date() + ''))\n  }\n\n  // 渲染文章列表\n  const renderArticleList = () => {\n    // 如果没有列表数据，直接返回 null，表示不渲染任何内容\n    if (!list) return null\n\n    // 有数据，再渲染列表\n    return list.map(item => {\n      const {\n        art_id,\n        /* aut_id,*/ aut_name,\n        comm_count,\n        cover: { type, images },\n        pubdate,\n        title,\n      } = item\n\n      const articleItemProps = {\n        type,\n        title,\n        aut_name,\n        comm_count,\n        pubdate,\n        images,\n        isLogin: false,\n      }\n      return (\n        <div\n          key={art_id}\n          className=\"article-item\"\n          onClick={() => history.push(`/article/${art_id}`)}\n        >\n          {/* 文章列表中的每一项 */}\n          <ArticleItem {...articleItemProps} />\n        </div>\n      )\n    })\n  }\n\n  return (\n    <div\n      className={styles.root}\n      style={{ display: activeId === channelId ? 'block' : 'none' }}\n    >\n      {/* 文章列表 */}\n      <div className=\"articles\">\n        <PullToRefresh onRefresh={onRefresh}>\n          {/* 渲染文章列表 */}\n          {renderArticleList()}\n\n          {/* channelId === activeId 阻止非当前 tab 加载数据 */}\n          <InfiniteScroll\n            hasMore={\n              prevTime !== null &&\n              channelId === activeId &&\n              loaction.pathname === '/home/index'\n            }\n            loadMore={loadMore}\n          />\n        </PullToRefresh>\n      </div>\n\n      {/* 举报 */}\n      {/* <MoreAction visible={false} /> */}\n    </div>\n  )\n}\n\nexport default ArticleList\n","import { useState, useEffect, useRef } from 'react'\nimport { Popup, Tabs } from 'antd-mobile'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getMyChannels, selectTab } from '@/store/actions'\n\nimport Icon from '@/components/Icon'\nimport Channels from './components/Channels'\nimport ArticleList from './components/ArticleList'\n\nimport styles from './index.module.scss'\nimport { AppState } from '@/store'\n\nexport type Props = {\n  prevRoute?: {\n    prevPathname: string\n    params: {\n      [k in string]: string\n    }\n  }\n}\n\nconst Home = ({ prevRoute }: Props) => {\n  const location = useLocation()\n  const history = useHistory()\n  // 拿到dispatch\n  const dispatch = useDispatch()\n  // 拿 redux 中的频道数据\n  const { channels, channelActiveIndex } = useSelector(\n    (state: AppState) => state.home\n  )\n  const [open, setOpen] = useState(false)\n  const prevRouteRef = useRef(prevRoute)\n\n  // 进入页面时，获取频道数据\n  useEffect(() => {\n    if (location.pathname !== '/home/index') return\n    dispatch(getMyChannels())\n  }, [dispatch, location.pathname])\n\n  // 关闭 channels\n  const onClose = () => setOpen(false)\n\n  // 切换 tab 时，更新 redux 中的状态\n  const onTabChange = (key: string) => {\n    dispatch(selectTab(+key))\n\n    // 切换 tabs 时，重置数据\n    prevRouteRef.current = {\n      prevPathname: '',\n      params: {},\n    }\n  }\n\n  return (\n    <div className={styles.root}>\n      <Tabs\n        className=\"tabs\"\n        activeKey={channelActiveIndex + ''}\n        onChange={onTabChange}\n      >\n        {channels.map(item => (\n          <Tabs.Tab title={item.name} key={item.id + ''} forceRender>\n            <ArticleList\n              activeId={channelActiveIndex}\n              channelId={item.id}\n              detailParams={{\n                isMatch:\n                  prevRouteRef.current?.prevPathname?.startsWith('/article') ??\n                  false,\n                params: prevRouteRef.current?.params ?? {},\n              }}\n            />\n          </Tabs.Tab>\n        ))}\n      </Tabs>\n\n      <div className=\"tabs-opration\">\n        <Icon type=\"iconbtn_search\" onClick={() => history.push('/search')} />\n        <Icon type=\"iconbtn_channel\" onClick={() => setOpen(true)} />\n      </div>\n\n      <Popup position=\"left\" className=\"channel-popup\" visible={open}>\n        <Channels onClose={onClose} />\n      </Popup>\n    </div>\n  )\n}\n\nexport default Home\n","import { NavBar } from 'antd-mobile'\nimport styles from './index.module.scss'\n\nconst Question = () => {\n  return (\n    <div className={styles.root}>\n      <NavBar>问答</NavBar>\n\n      <div className=\"question-list\">\n        <div className=\"question-item\">\n          <div className=\"left\">\n            <h3>作为 IT 行业的过来人，你有什么话想对后辈说的？</h3>\n            <div className=\"info\">\n              <span>赞同 1000+</span>\n              <span>评论 500+</span>\n              <span>1小时前</span>\n            </div>\n          </div>\n          <div className=\"right\">\n            <img\n              src=\"https://pic1.zhimg.com/80/v2-8e77b2771314f674cccba5581560d333_xl.jpg?source=4e949a73\"\n              alt=\"\"\n            />\n          </div>\n        </div>\n        <div className=\"question-item\">\n          <div className=\"left\">\n            <h3>作为 IT 行业的过来人，你有什么话想对后辈说的？</h3>\n            <div className=\"info\">\n              <span>赞同 1000+</span>\n              <span>评论 500+</span>\n              <span>1小时前</span>\n            </div>\n          </div>\n          <div className=\"right\">\n            <img\n              src=\"https://pic1.zhimg.com/80/v2-8e77b2771314f674cccba5581560d333_xl.jpg?source=4e949a73\"\n              alt=\"\"\n            />\n          </div>\n        </div>\n        <div className=\"question-item\">\n          <div className=\"left\">\n            <h3>作为 IT 行业的过来人，你有什么话想对后辈说的？</h3>\n            <div className=\"info\">\n              <span>赞同 1000+</span>\n              <span>评论 500+</span>\n              <span>1小时前</span>\n            </div>\n          </div>\n          <div className=\"right\">\n            <img\n              src=\"https://pic1.zhimg.com/80/v2-8e77b2771314f674cccba5581560d333_xl.jpg?source=4e949a73\"\n              alt=\"\"\n            />\n          </div>\n        </div>\n        <div className=\"question-item\">\n          <div className=\"left\">\n            <h3>作为 IT 行业的过来人，你有什么话想对后辈说的？</h3>\n            <div className=\"info\">\n              <span>赞同 1000+</span>\n              <span>评论 500+</span>\n              <span>1小时前</span>\n            </div>\n          </div>\n          <div className=\"right\">\n            <img\n              src=\"https://pic1.zhimg.com/80/v2-8e77b2771314f674cccba5581560d333_xl.jpg?source=4e949a73\"\n              alt=\"\"\n            />\n          </div>\n        </div>\n        <div className=\"question-item\">\n          <div className=\"left\">\n            <h3>作为 IT 行业的过来人，你有什么话想对后辈说的？</h3>\n            <div className=\"info\">\n              <span>赞同 1000+</span>\n              <span>评论 500+</span>\n              <span>1小时前</span>\n            </div>\n          </div>\n          <div className=\"right\">\n            <img\n              src=\"https://pic1.zhimg.com/80/v2-8e77b2771314f674cccba5581560d333_xl.jpg?source=4e949a73\"\n              alt=\"\"\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Question\n","import { NavBar } from 'antd-mobile'\nimport styles from './index.module.scss'\n\nconst Video = () => {\n  return (\n    <div className={styles.root}>\n      <NavBar>视频</NavBar>\n\n      <div className=\"video-list\">\n        <div className=\"video-item\">\n          <h3 className=\"title\">\n            格力电器将继续发展手机业务，并将向全产业覆盖！\n          </h3>\n          <div className=\"play\">\n            <video src=\"https://ips.ifeng.com/video19.ifeng.com/video09/2021/05/26/p6803231351488126976-102-8-161249.mp4?reqtype=tsl&vid=2c791e3b-444e-4578-83e3-f4808228ae3b&uid=0puFR4&from=v_Free&pver=vHTML5Player_v2.0.0&sver=&se=&cat=&ptype=&platform=pc&sourceType=h5&dt=1622096387396&gid=6a4poXmsep1E&sign=39f76885daca6503ebf90acbfffc1ff1&tm=1622096387396\"></video>\n          </div>\n          <span>1563次播放</span>\n        </div>\n\n        <div className=\"video-item\">\n          <h3 className=\"title\">\n            你用上5G了吗？我国5G手机终端达3.1亿 占全球比例超80％\n          </h3>\n          <div className=\"play\">\n            <video src=\"https://ips.ifeng.com/video19.ifeng.com/video09/2021/05/26/p6803268684325330944-102-8-184104.mp4?reqtype=tsl&vid=ec74b1e4-d1fa-488b-aaf5-71984ca7d13e&uid=1Vun5L&from=v_Free&pver=vHTML5Player_v2.0.0&sver=&se=&cat=&ptype=&platform=pc&sourceType=h5&dt=1622096310639&gid=fg3vsXmseXFv&sign=38e7c790561e1fd1b57e61a1cbd8031c&tm=1622096310639\"></video>\n          </div>\n          <span>1563次播放</span>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Video\n","import { Link } from 'react-router-dom'\nimport { useEffect } from 'react'\n// react-redux 不使用 hooks 时的用法\n// connect 是一个高阶组件\nimport { connect } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { getProfile } from '@/store/actions'\nimport type { AppState, AppThunkDispatch } from '@/store'\n\nimport Icon from '@/components/Icon'\nimport styles from './index.module.scss'\n\ntype Props = {\n  profile?: AppState['profile']['profile']\n  onGetProfile?: () => Promise<void>\n}\n\nconst Profile = ({ profile, onGetProfile }: Props) => {\n  const history = useHistory()\n\n  useEffect(() => {\n    onGetProfile?.()\n  }, [onGetProfile])\n\n  const { photo, name, like_count, follow_count, fans_count, art_count } =\n    profile!\n\n  return (\n    <div className={styles.root}>\n      <div className=\"profile\">\n        {/* 个人信息 */}\n        <div className=\"user-info\">\n          <div className=\"avatar\">\n            <img\n              src={photo || 'http://toutiao.itheima.net/images/user_head.jpg'}\n              alt=\"\"\n            />\n          </div>\n          <div className=\"user-name text-overflow\">{name}</div>\n          <Link to=\"/profile/edit\">\n            个人信息 <Icon type=\"iconbtn_right\" />\n          </Link>\n        </div>\n\n        {/* 今日阅读 */}\n        <div className=\"read-info\">\n          <Icon type=\"iconbtn_readingtime\" />\n          今日阅读\n          <span>10</span>\n          分钟\n        </div>\n\n        {/* 动态 - 对应的这一行 */}\n        <div className=\"count-list\">\n          <div\n            className=\"count-item\"\n            onClick={() => history.push('/profile/activity')}\n          >\n            <p>{art_count}</p>\n            <p>动态</p>\n          </div>\n          <div\n            className=\"count-item\"\n            onClick={() => history.push('/profile/fans?type=followings')}\n          >\n            <p>{follow_count}</p>\n            <p>关注</p>\n          </div>\n          <div\n            className=\"count-item\"\n            onClick={() => history.push('/profile/fans?type=followers')}\n          >\n            <p>{fans_count}</p>\n            <p>粉丝</p>\n          </div>\n          <div className=\"count-item\">\n            <p>{like_count}</p>\n            <p>被赞</p>\n          </div>\n        </div>\n\n        {/* 消息通知 - 对应的这一行 */}\n        <div className=\"user-links\">\n          <div\n            className=\"link-item\"\n            onClick={() => history.push('/profile/notification')}\n          >\n            <Icon type=\"iconbtn_mymessages\" />\n            <div>消息通知</div>\n          </div>\n          <div\n            className=\"link-item\"\n            onClick={() => history.push('/profile/article?type=1')}\n          >\n            <Icon type=\"iconbtn_mycollect\" />\n            <div>收藏</div>\n          </div>\n          <div\n            className=\"link-item\"\n            onClick={() => history.push('/profile/article?type=2')}\n          >\n            <Icon type=\"iconbtn_history1\" />\n            <div>浏览历史</div>\n          </div>\n          <div\n            className=\"link-item\"\n            onClick={() => history.push('/profile/article?type=3')}\n          >\n            <Icon type=\"iconbtn_myworks\" />\n            <div>我的作品</div>\n          </div>\n        </div>\n      </div>\n\n      {/* 更多服务 */}\n      <div className=\"more-service\">\n        <h3>更多服务</h3>\n        <div className=\"service-list\">\n          <div\n            className=\"service-item\"\n            onClick={() => history.push('/profile/feedback')}\n          >\n            <Icon type=\"iconbtn_feedback\" />\n            <div>用户反馈</div>\n          </div>\n          <div className=\"service-item\" onClick={() => history.push('/chat')}>\n            <Icon type=\"iconbtn_xiaozhitongxue\" />\n            <div>小智同学</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\n// redux 为 组件 提供 状态\nconst mapStateToProps = (state: AppState) => {\n  return {\n    profile: state.profile.profile,\n  }\n}\n\n// redux 为 组件 提供修改状态的函数\nconst mapDispatchTopProps = (dispatch: AppThunkDispatch) => {\n  return {\n    onGetProfile: () => dispatch(getProfile()),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchTopProps)(Profile)\n","import { Route, useHistory, useLocation } from 'react-router-dom';\nimport { TabBar } from 'antd-mobile';\nimport styles from './index.module.scss';\n\nimport Icon from '@/components/Icon';\nimport AuthRoute from '@/components/AuthRoute';\n// import { KeepAlive } from '@/components/KeepAlive'\nimport { PreviousRoute } from '@/components/PreviousRoute';\n\n// 导入页面组件，配置路由\nimport Home from '../Home';\nimport Question from '../Question';\nimport Video from '../Video';\nimport Profile from '../Profile';\n\nconst tabs = [\n  { path: '/home/index', icon: 'iconbtn_home', text: '首页' },\n  { path: '/home/question', icon: 'iconbtn_qa', text: '问答' },\n  { path: '/home/video', icon: 'iconbtn_video', text: '视频' },\n  { path: '/home/profile', icon: 'iconbtn_mine', text: '我的' },\n];\n\nconst Layout = () => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const changeActive = (path: string) => {\n    history.push(path);\n  };\n\n  return (\n    <div className={styles.root}>\n      <PreviousRoute exact path=\"/home/index\">\n        <Home></Home>\n      </PreviousRoute>\n      <Route path=\"/home/question\">\n        <Question></Question>\n      </Route>\n      <Route path=\"/home/video\">\n        <Video></Video>\n      </Route>\n      <AuthRoute path=\"/home/profile\">\n        <Profile></Profile>\n      </AuthRoute>\n\n      <TabBar\n        activeKey={location.pathname}\n        onChange={(key) => changeActive(key)}\n      >\n        {tabs.map((item) => (\n          <TabBar.Item\n            key={item.path}\n            icon={(active) => (\n              <Icon\n                type={active ? `${item.icon}_sel` : item.icon}\n                className=\"tab-bar-item-icon\"\n              />\n            )}\n            title={item.text}\n          />\n        ))}\n      </TabBar>\n    </div>\n  );\n};\n\nexport default Layout;\n","import styles from './index.module.scss'\n\n// 子组件需要接受 onUpdateGender 方法，所以，父组件得提供 onUpdateGender 方法\nconst EditList = ({ onUpdateGender, onClose, items }) => {\n  return (\n    <div className={styles.root}>\n      {items.map(item => (\n        <div\n          key={item.value}\n          className=\"list-item\"\n          onClick={() => onUpdateGender(item.value)}\n        >\n          {item.text}\n        </div>\n      ))}\n\n      {/* <div className=\"list-item\" onClick={() => onUpdateGender('0')}>\n        男\n      </div>\n      <div className=\"list-item\" onClick={() => onUpdateGender('1')}>\n        女\n      </div> */}\n\n      <div className=\"list-item\" onClick={onClose}>\n        取消\n      </div>\n    </div>\n  )\n}\n\nexport default EditList\n","import { useState, useEffect } from 'react'\nimport { Toast, TextArea, Input, NavBar } from 'antd-mobile'\n\nimport styles from './index.module.scss'\n\ntype Props = {\n  config: {\n    text: string\n    value: string\n  }\n  onUpdate: (name: string, value: string | number) => void\n  onClose: () => void\n}\n\nconst EditInput = ({ config, onUpdate, onClose }: Props) => {\n  const [value, setValue] = useState(config.value || '')\n\n  useEffect(() => {\n    if (config.value !== undefined) {\n      setValue(config.value)\n    }\n  }, [config.value])\n\n  const onUpdateName = () => {\n    const name = value.trim()\n    if (name === '') return Toast.show('昵称不能为空')\n\n    // 调用父组件中的方法，来更新昵称\n    onUpdate(config.text === '昵称' ? 'name' : 'intro', value)\n  }\n\n  return (\n    <div className={styles.root}>\n      <NavBar\n        onBack={onClose}\n        className=\"navbar\"\n        right={\n          <span className=\"commit-btn\" onClick={onUpdateName}>\n            提交\n          </span>\n        }\n      >\n        编辑{config.text}\n      </NavBar>\n\n      <div className=\"edit-input-content\">\n        <h3>{config.text}</h3>\n\n        {config.text === '昵称' ? (\n          <div className=\"input-wrap\">\n            <Input\n              value={value}\n              onChange={value => {\n                setValue(value)\n              }}\n              placeholder=\"请输入\"\n              maxLength={20}\n            />\n          </div>\n        ) : (\n          <TextArea\n            className=\"textarea\"\n            placeholder=\"请输入\"\n            showCount\n            maxLength={99}\n            value={value}\n            onChange={value => setValue(value)}\n          />\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default EditInput\n","import { List, DatePicker, Popup, Dialog, NavBar } from 'antd-mobile'\nimport classNames from 'classnames'\nimport { useHistory } from 'react-router-dom'\nimport { useState, useEffect, useRef } from 'react'\nimport dayjs from 'dayjs'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { updateUser, updateUserPhoto, getUserInfo } from '@/store/actions'\n\nimport styles from './index.module.scss'\n\n// 导入 性别 对应的抽屉内容\nimport EditList from './components/EditList'\n// 导入 昵称或简介对应的抽屉内容\nimport EditInput from './components/EditInput'\n\nimport { removeToken } from '@/utils'\nimport { AppState } from '@/store'\n\nconst Item = List.Item\nconst { show } = Dialog\n\n// 修改头像对应的数据：\nconst photoItems = [\n  { text: '拍照', value: 'picture' },\n  { text: '本地选择', value: 'local' },\n]\n// 修改性别对应的数据：\nconst genderItems = [\n  { text: '男', value: 0 },\n  { text: '女', value: 1 },\n]\n\nconst ProfileEdit = () => {\n  const history = useHistory()\n  const dispatch = useDispatch()\n\n  // 创建一个用来获取 file 的ref对象\n  const fileRef = useRef<HTMLInputElement>(null)\n\n  // 个人资料的状态\n  const { userInfo } = useSelector<AppState, AppState['profile']>(\n    state => state.profile\n  )\n  const [showBirthday, setShowBirthday] = useState(false)\n\n  // 性别抽屉的展示或隐藏\n  const [listDrawer, setListDrawer] = useState({\n    open: false,\n    type: 'photo',\n  })\n\n  // 昵称或简介对应的状态\n  const [inputDrawer, setInputDrawer] = useState({\n    open: false,\n    // 类型：如果是昵称，值为：name；如果是简介，值为：intro\n    type: 'name',\n  })\n\n  // 进入页面发送请求\n  useEffect(() => {\n    try {\n      dispatch(getUserInfo())\n    } catch (e) {}\n  }, [dispatch])\n\n  // 修改头像的事件\n  const onUpdatePhoto = () => {\n    fileRef.current?.click()\n  }\n  // input[type=\"file\"] 标签的 change 事件\n  // 通过事件对象，可以拿到选择的照片\n  const onPhotoChagne = async (e: React.ChangeEvent<HTMLInputElement>) => {\n    try {\n      const file = e.target.files![0]\n      const formData = new FormData()\n      formData.append('photo', file)\n\n      dispatch(updateUserPhoto(formData))\n    } catch {\n    } finally {\n      // 关闭抽屉\n      onGenderClose()\n    }\n  }\n\n  // 列表项的点击事件\n  const onListOpen = (type: 'gender' | 'photo') => {\n    setListDrawer({\n      open: true,\n      type,\n    })\n  }\n\n  // 输入框的点击事件\n  const onInputOpen = (type: 'name' | 'intro') => {\n    setInputDrawer({\n      open: true,\n      type,\n    })\n  }\n\n  const onUpdateUser = async (name: string, value: string | number) => {\n    try {\n      dispatch(updateUser({ [name]: value }))\n      onInputClose()\n      onGenderClose()\n    } catch {}\n  }\n\n  // 修改生日\n  const onBirthdayChange = async (date: Date) => {\n    const birthday = dayjs(date).format('YYYY-MM-DD')\n\n    try {\n      dispatch(updateUser({ birthday }))\n      setShowBirthday(false)\n    } catch {}\n  }\n\n  // 关闭昵称或简介的抽屉\n  const onInputClose = () => {\n    setInputDrawer({\n      ...inputDrawer,\n      open: false,\n    })\n  }\n\n  // 关闭性别对应的抽屉\n  const onGenderClose = () => {\n    // 只修改其中的一个状态值\n    setListDrawer({\n      ...listDrawer,\n      open: false,\n    })\n  }\n\n  // 退出功能\n  const logout = () => {\n    show({\n      title: '温馨提示',\n      content: '你确定退出吗？',\n      closeOnMaskClick: true,\n      closeOnAction: true,\n      actions: [\n        [\n          {\n            key: 'cancel',\n            text: '取消',\n          },\n          {\n            key: 'confirm',\n            text: '确认',\n            style: {\n              color: '#fc6627',\n            },\n            onClick: () => {\n              // 移除本地token\n              removeToken()\n              // 跳转到登录页面\n              history.push('/login')\n            },\n          },\n        ],\n      ],\n    })\n  }\n\n  const onShowBirthday = () => {\n    setShowBirthday(true)\n  }\n\n  // 约定：\n  // name 第一次渲染时没有值\n  //      以后的每次渲染都是有值的\n  const { photo, name, intro, gender, birthday } = userInfo\n\n  // 昵称对应的数据\n  const nameConfig = {\n    text: '昵称',\n    value: name,\n  }\n\n  // 简介对应的数据\n  const introConfig = {\n    text: '简介',\n    value: intro ?? '',\n  }\n\n  return (\n    <div className={styles.root}>\n      <div className=\"content\">\n        {/* 标题 */}\n        <NavBar\n          style={{\n            '--border-bottom': '1px solid #F0F0F0',\n          }}\n          onBack={() => history.go(-1)}\n        >\n          个人信息\n        </NavBar>\n\n        <div className=\"wrapper\">\n          {/* 列表 */}\n          <List className=\"profile-list\">\n            {/* 列表项 */}\n            <Item\n              extra={\n                <span className=\"avatar-wrapper\">\n                  <img\n                    width={24}\n                    height={24}\n                    src={\n                      photo || 'http://toutiao.itheima.net/images/user_head.jpg'\n                    }\n                    alt=\"\"\n                  />\n                </span>\n              }\n              onClick={() => onListOpen('photo')}\n            >\n              头像\n            </Item>\n            <Item arrow extra={name} onClick={() => onInputOpen('name')}>\n              昵称\n            </Item>\n            <Item\n              arrow\n              extra={\n                <span\n                  className={classNames(\n                    'intro text-overflow',\n                    intro && 'normal'\n                  )}\n                >\n                  {intro || '未填写'}\n                </span>\n              }\n              onClick={() => onInputOpen('intro')}\n            >\n              简介\n            </Item>\n          </List>\n\n          <List className=\"profile-list\">\n            <Item\n              arrow\n              extra={gender === 0 ? '男' : '女'}\n              onClick={() => onListOpen('gender')}\n            >\n              性别\n            </Item>\n            <Item onClick={onShowBirthday} extra={birthday}>\n              生日\n            </Item>\n          </List>\n\n          <DatePicker\n            visible={showBirthday}\n            value={new Date(birthday)}\n            onClose={() => setShowBirthday(false)}\n            onConfirm={onBirthdayChange}\n            title=\"选择年月日\"\n            min={new Date(1900, 0, 1, 0, 0, 0)}\n            max={new Date()}\n          />\n\n          {/* 此处是一个隐藏的 file 标签 */}\n          <input type=\"file\" hidden ref={fileRef} onChange={onPhotoChagne} />\n        </div>\n\n        <div className=\"logout\">\n          <button className=\"btn\" onClick={logout}>\n            退出登录\n          </button>\n        </div>\n      </div>\n\n      {/* 头像、性别 */}\n      <Popup\n        visible={listDrawer.open}\n        onMaskClick={onGenderClose}\n        position=\"bottom\"\n      >\n        <EditList\n          items={listDrawer.type === 'photo' ? photoItems : genderItems}\n          onClose={onGenderClose}\n          onUpdateGender={\n            listDrawer.type === 'photo'\n              ? onUpdatePhoto\n              : (value: string) => onUpdateUser('gender', value)\n          }\n        />\n      </Popup>\n      {/* 昵称、简介 */}\n      <Popup\n        visible={inputDrawer.open}\n        onMaskClick={onInputClose}\n        position=\"right\"\n      >\n        <EditInput\n          config={inputDrawer.type === 'name' ? nameConfig : introConfig}\n          onUpdate={onUpdateUser}\n          onClose={onInputClose}\n        />\n      </Popup>\n    </div>\n  )\n}\n\nexport default ProfileEdit\n","import classnames from 'classnames'\nimport React, { useEffect, useState /*, useRef*/ } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useHistory, useLocation } from 'react-router'\nimport { NavBar, Search } from 'antd-mobile'\nimport { useDebounceFn } from 'ahooks'\n\nimport { getSuggestion, resetSuggestion } from '@/store/actions'\n\nimport Icon from '@/components/Icon'\nimport styles from './index.module.scss'\nimport { AppState } from '@/store'\n\n// 防抖\n// import debounce from 'lodash/debounce'\n\nconst SEARCH_KEY = 'geek-h5-search_pip__'\n\nconst SearchPage = () => {\n  const dispatch = useDispatch()\n  const history = useHistory()\n  const location = useLocation()\n  const [searchText, setSearchText] = useState('')\n  const [searchHistory, setSearchHistory] = useState<string[]>([])\n  // const debounceSearchRef = useRef<any>()\n\n  // 获取 redux 中的搜索联想\n  const { suggestion } = useSelector<AppState, AppState['search']>(\n    state => state.search\n  )\n\n  useEffect(() => {\n    // 进入页面时，就从本地存储中获取搜索历史记录\n    const localSearchHistory = JSON.parse(\n      localStorage.getItem(SEARCH_KEY) || '[]'\n    ) as string[]\n\n    // 如果本地缓存中有搜索历史记录，就更新到状态中，也就是展示在页面里面\n    if (localSearchHistory.length > 0) {\n      setSearchHistory(localSearchHistory)\n    }\n  }, [location])\n\n  useEffect(() => {\n    return () => {\n      dispatch(resetSuggestion())\n    }\n  }, [dispatch])\n\n  // // 注意：此处返回的函数 debounceGetSuggest 才是防抖函数\n  // const debounceGetSuggest = debounce((value: string) => {\n  //   // 发请求获取联想内容\n  //   dispatch(getSuggestion(value))\n  // }, 1000)\n\n  // if (!debounceSearchRef.current) {\n  //   debounceSearchRef.current = debounceGetSuggest\n  // }\n\n  // https://ahooks.gitee.io/zh-CN/hooks/side-effect/use-debounce-fn\n  const { run: debounceGetSuggest } = useDebounceFn(\n    (value: string) => {\n      dispatch(getSuggestion(value))\n    },\n    {\n      wait: 500,\n    }\n  )\n\n  // 搜索文本框内容改变时的回调\n  const onSearchChange = (value: string) => {\n    setSearchText(value)\n\n    // 如果文本框没有值，不发请求\n    if (!value) {\n      return dispatch(resetSuggestion())\n    }\n\n    // 发请求获取联想内容\n    debounceGetSuggest(value)\n  }\n\n  const onGoToDetail = (value: string) => {\n    history.replace(`/search/result?q=${value}`)\n\n    onSuggestionItemClick(value)\n  }\n  const onSearch = () => {\n    history.replace(`/search/result?q=${searchText}`)\n\n    onSuggestionItemClick(searchText)\n  }\n\n  // 将 搜索记录 保存到本地缓存中\n  const onSuggestionItemClick = (searchValue: string) => {\n    // 将当前被点击项存储到 本地缓存 中\n    // 1 从本地缓存中获取到 历史记录\n    let localSearchHistory = JSON.parse(\n      localStorage.getItem(SEARCH_KEY) || '[]'\n    ) as string[]\n\n    if (localSearchHistory.length === 0) {\n      // 说明没有任何记录\n      localSearchHistory.unshift(searchValue)\n    } else {\n      // 说明已经有记录\n      // 2 判断是否已经搜索过该项内容\n      if (localSearchHistory.includes(searchValue)) {\n        // 4 如果搜索过，就从数组中移除该项，将该项添加到第一个\n        const restArr = localSearchHistory.filter(item => item !== searchValue)\n        localSearchHistory = [searchValue, ...restArr]\n      } else {\n        // 3 如果没有搜索过，此时，只要添加到历史记录中的第一个即可\n        localSearchHistory.unshift(searchValue)\n      }\n    }\n    // 5 将处理后的数据存储到本地缓存中\n    localStorage.setItem(SEARCH_KEY, JSON.stringify(localSearchHistory))\n  }\n\n  // 清除全部\n  const onClearAll = () => {\n    localStorage.removeItem(SEARCH_KEY)\n    setSearchHistory([])\n  }\n\n  // 将联想关键词中匹配的内容高亮\n  // 接口返回的数据：['1', '101', '1.11', '01', '18']\n  /**\n   *  1. 拿到第一匹配项的索引（index）\n      2. 开启截取字符串，\n        2.1 先截取关键字前面的内容： slice(0, index)\n        2.2 再截取关键字后面的内容： slice(index + 1)\n      3. 将得到的三部分内容，分别是： `前面的内容 关键字 后面的内容` ，展示在页面中即可\n   */\n  const suggetList = suggestion.map(item => {\n    const suggestIndex = item.indexOf(searchText)\n    const left = item.slice(0, suggestIndex)\n    const right = item.slice(suggestIndex + 1)\n\n    // return [left, searchText, right]\n    return {\n      left,\n      searchText,\n      right,\n    }\n  })\n  // console.log(suggetList)\n\n  return (\n    <div className={styles.root}>\n      <NavBar\n        className=\"navbar\"\n        onBack={() => {\n          history.go(-1)\n          dispatch(resetSuggestion())\n        }}\n        right={\n          <span className=\"search-text\" onClick={onSearch}>\n            搜索\n          </span>\n        }\n      >\n        <Search\n          placeholder=\"请输入关键字搜索\"\n          value={searchText}\n          onChange={onSearchChange}\n          onSearch={onSearch}\n          onClear={() => {\n            setSearchText('')\n            // 清空联想内容\n            dispatch(resetSuggestion())\n          }}\n        />\n      </NavBar>\n\n      {searchHistory.length > 0 && (\n        <div\n          className=\"history\"\n          style={{\n            display: suggestion.length > 0 ? 'none' : 'block',\n          }}\n        >\n          <div className=\"history-header\">\n            <span>搜索历史</span>\n            <span onClick={onClearAll}>\n              <Icon type=\"iconbtn_del\" />\n              清除全部\n            </span>\n          </div>\n\n          <div className=\"history-list\">\n            {searchHistory.map((item, i) => (\n              <span\n                className=\"history-item\"\n                key={i}\n                onClick={() => onGoToDetail(item)}\n              >\n                {item}\n                <span className=\"divider\"></span>\n              </span>\n            ))}\n          </div>\n        </div>\n      )}\n\n      <div\n        className={classnames(\n          'search-result',\n          suggestion.length > 0 ? 'show' : ''\n        )}\n      >\n        {suggetList.map((item, index) => (\n          <div\n            key={index}\n            className=\"result-item\"\n            onClick={() =>\n              onGoToDetail(item.left + item.searchText + item.right)\n            }\n          >\n            <Icon className=\"icon-search\" type=\"iconbtn_search\" />\n            <div className=\"result-value\">\n              {item.left}\n              <span>{item.searchText}</span>\n              {item.right}\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default SearchPage\n","import type { AppThunkAction } from '@/store'\nimport { http } from '@/utils'\n\n// 接口返回的数据类型\ntype Suggestion = {\n  message: string\n  data: {\n    options: string[]\n  }\n}\n\n// 获取联想内容\nconst getSuggestion = (q: string): AppThunkAction => {\n  return async dispatch => {\n    const res = await http.get<Suggestion>('/suggestion', {\n      params: {\n        q\n      }\n    })\n\n    let { options } = res.data.data\n    if (options[0] === null) {\n      options = []\n    }\n\n    dispatch({ type: 'search/getSuggestion', payload: options })\n  }\n}\n\n// 搜索结果的类型\ntype Article = {\n  art_id: string\n  aut_id: string\n  aut_name: string\n  comm_count: number\n  pubdate: string\n  title: string\n  cover: { type: number; images: string[] }\n}\n\ntype SearchResult = {\n  message: string\n  data: {\n    page: number\n    per_page: number\n    total_count: number\n    results: Article[]\n  }\n}\n\n// 获取搜索结果\nconst getSearchResult = (q: string): AppThunkAction => {\n  return async dispatch => {\n    const res = await http.get<SearchResult>('/search', {\n      params: {\n        q\n      }\n    })\n\n    dispatch({ type: 'search/getSearchResult', payload: res.data.data })\n  }\n}\n\n// 重置联想内容\nconst resetSuggestion = () => ({ type: 'search/resetSuggestion' })\n\nexport { getSuggestion, getSearchResult, resetSuggestion }\n","import { useHistory, useLocation } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { NavBar } from 'antd-mobile'\nimport { getSearchResult } from '@/store/actions'\n\nimport ArticleItem from '@/components/ArticleItem'\n\nimport styles from './index.module.scss'\nimport { useEffect } from 'react'\nimport { AppState } from '@/store'\n\nconst Result = () => {\n  const history = useHistory()\n  const location = useLocation()\n  const dispatch = useDispatch()\n\n  const { searchResult } = useSelector<AppState, AppState['search']>(\n    state => state.search\n  )\n  const params = new URLSearchParams(location.search)\n  const q = params.get('q') ?? ''\n\n  useEffect(() => {\n    dispatch(getSearchResult(q))\n  }, [dispatch, q])\n\n  const onToAritcleDetail = (art_id: string) => {\n    history.push(`/article/${art_id}`)\n  }\n\n  const { results } = searchResult\n\n  return (\n    <div className={styles.root}>\n      <NavBar\n        onBack={() =>\n          history.replace('/search', {\n            isFromResult: true\n          })\n        }\n      >\n        搜索结果\n      </NavBar>\n      <div className=\"article-list\">\n        {results?.map((item, index) => {\n          const {\n            aut_name,\n            comm_count,\n            pubdate,\n            title,\n            art_id,\n            cover: { type, images }\n          } = item\n\n          const articleItemProps = {\n            type,\n            title,\n            aut_name,\n            comm_count,\n            pubdate,\n            images\n          }\n\n          return (\n            <div key={index} onClick={() => onToAritcleDetail(art_id)}>\n              <ArticleItem {...articleItemProps} />\n            </div>\n          )\n        })}\n      </div>\n    </div>\n  )\n}\n\nexport default Result\n","import React, { useRef, useEffect } from 'react'\nimport throttle from 'lodash/throttle'\n\nimport styles from './index.module.scss'\n\ntype Props = {\n  root: HTMLDivElement\n  height: number\n  offset: number\n  children: React.ReactNode\n}\n\nconst Sticky = ({ root, height, offset = 0, children }: Props) => {\n  const placeholderRef = useRef<HTMLDivElement>(null)\n  const containerRef = useRef<HTMLDivElement>(null)\n\n  useEffect(() => {\n    if (!root) return\n\n    const placeholderDOM = placeholderRef.current!\n    const containerDOM = containerRef.current!\n\n    const onScroll = throttle(() => {\n      const { top } = placeholderDOM.getBoundingClientRect()\n      if (top <= offset) {\n        containerDOM.style.position = 'fixed'\n        containerDOM.style.top = `${offset}px`\n        placeholderDOM.style.height = `${height}px`\n      } else {\n        containerDOM.style.position = 'static'\n        placeholderDOM.style.height = '0px'\n      }\n    }, 100)\n    root.addEventListener('scroll', onScroll)\n    return () => {\n      root.removeEventListener('scroll', onScroll)\n    }\n  }, [root, offset, height])\n\n  return (\n    <div className={styles.root}>\n      {/* 占位元素 */}\n      <div ref={placeholderRef} className=\"sticky-placeholder\" />\n      {/* 导航栏 */}\n      <div className=\"sticky-container\" ref={containerRef}>\n        {children}\n      </div>\n    </div>\n  )\n}\n\nexport default Sticky\n","export default __webpack_public_path__ + \"static/media/none.78b85fdc.png\";","import styles from './index.module.scss'\n\nimport noComment from '@/assets/none.png'\n\nconst NoneComment = () => {\n  return (\n    <div className={styles.root}>\n      <img src={noComment} alt=\"\" />\n      <p className=\"no-comment\">还没有人评论哦</p>\n    </div>\n  )\n}\n\nexport default NoneComment\n","import dayjs from 'dayjs'\nimport classnames from 'classnames'\n\nimport Icon from '@/components/Icon'\n\nimport styles from './index.module.scss'\nimport { ArtComment } from '@/store/data'\n\ntype Props = Partial<ArtComment> & {\n  onThumbsUp?: () => void\n  onFollow?: () => void\n  onOpenReply?: () => void\n  // normal 普通 - 文章的评论\n  // origin 回复评论的原始评论，也就是对哪个评论进行回复\n  // reply 回复评论\n  type?: 'normal' | 'reply' | 'origin'\n}\n\nconst CommentItem = ({\n  aut_photo,\n  aut_name,\n  like_count,\n  is_followed,\n  is_liking,\n  content,\n  reply_count,\n  pubdate,\n  onThumbsUp,\n  onOpenReply = () => {},\n  onFollow,\n  // normal 普通\n  // origin 回复评论的原始评论\n  // reply 回复评论\n  type = 'normal'\n}: Props) => {\n  // 回复按钮\n  const replyJSX =\n    type === 'normal' ? (\n      <span className=\"replay\" onClick={onOpenReply}>\n        {reply_count === 0 ? '' : reply_count}回复\n        <Icon type=\"iconbtn_right\" />\n      </span>\n    ) : null\n\n  return (\n    <div className={styles.root}>\n      <div className=\"avatar\">\n        <img src={aut_photo} alt=\"\" />\n      </div>\n      <div className=\"comment-info\">\n        <div className=\"comment-info-header\">\n          <span className=\"name\">{aut_name}</span>\n          {/* 文章评论、评论的回复 */}\n          {(type === 'normal' || type === 'reply') && (\n            <span className=\"thumbs-up\" onClick={onThumbsUp}>\n              {like_count}\n              <Icon type={is_liking ? 'iconbtn_like_sel' : 'iconbtn_like2'} />\n            </span>\n          )}\n          {/* 要回复的评论 */}\n          {type === 'origin' && (\n            <span\n              onClick={onFollow}\n              className={classnames('follow', is_followed ? 'followed' : '')}\n            >\n              {is_followed ? '已关注' : '关注'}\n            </span>\n          )}\n        </div>\n        <div className=\"comment-content\">{content}</div>\n        <div className=\"comment-footer\">\n          {replyJSX}\n          {/* 非评论的回复 */}\n          {type !== 'reply' && (\n            <span className=\"comment-time\">{dayjs().from(pubdate)}</span>\n          )}\n          {/* 文章的评论 */}\n          {type === 'origin' && (\n            <span className=\"thumbs-up\" onClick={onThumbsUp}>\n              {like_count}\n              <Icon type={is_liking ? 'iconbtn_like_sel' : 'iconbtn_like2'} />\n            </span>\n          )}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default CommentItem\n","import React, { useState, useRef, useEffect } from 'react'\nimport { NavBar, TextArea } from 'antd-mobile'\nimport styles from './index.module.scss'\nimport { TextAreaRef } from 'antd-mobile/es/components/text-area'\n\ntype Props = {\n  name?: string\n  // art_id?: string\n  onClose?: () => void\n  // 修改：参数为 string 类型，也就是拿到 评论的内容\n  onComment: (content: string) => void\n}\n\nconst CommentInput = ({ name, onClose, onComment }: Props) => {\n  const [value, setValue] = useState('')\n  const txtRef = useRef<TextAreaRef>(null)\n\n  useEffect(() => {\n    // 解决页面抖动的问题\n    setTimeout(() => {\n      txtRef.current?.focus()\n    }, 600)\n  }, [])\n\n  const onChange = (value: string) => {\n    setValue(value)\n  }\n\n  return (\n    <div className={styles.root}>\n      <NavBar\n        onBack={onClose}\n        right={\n          <span className=\"publish\" onClick={() => onComment(value)}>\n            发表\n          </span>\n        }\n      >\n        {name ? '回复评论' : '评论文章'}\n      </NavBar>\n\n      <div className=\"input-area\">\n        {name && <div className=\"at\">@{name}:</div>}\n        <TextArea\n          ref={txtRef}\n          placeholder=\"说点什么~\"\n          rows={10}\n          value={value}\n          onChange={onChange}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default CommentInput\n","import Icon from '@/components/Icon'\nimport styles from './index.module.scss'\n\ntype Props = {\n  comm_count?: number\n  attitude?: number\n  is_collected?: boolean\n  placeholder?: string\n  onComment?: () => void\n  onLike?: () => void\n  onCollected?: () => void\n  onShare?: () => void\n  onShowComment?: () => void\n  // normal 普通评论\n  // reply 回复评论\n  type?: 'normal' | 'reply'\n}\n\nconst CommentFooter = ({\n  comm_count,\n  attitude,\n  is_collected,\n  placeholder,\n  onComment,\n  onLike,\n  onCollected,\n  onShare,\n  onShowComment,\n  type = 'normal'\n}: Props) => {\n  return (\n    <div className={styles.root}>\n      <div className=\"input-btn\" onClick={onComment}>\n        <Icon type=\"iconbianji\" />\n        <span>{placeholder}</span>\n      </div>\n\n      {type === 'normal' && (\n        <>\n          <div className=\"action-item\" onClick={onShowComment}>\n            <Icon type=\"iconbtn_comment\" />\n            <p>评论</p>\n            {!!comm_count && <span className=\"bage\">{comm_count}</span>}\n          </div>\n          <div className=\"action-item\" onClick={onLike}>\n            <Icon\n              type={attitude === 1 ? 'iconbtn_like_sel' : 'iconbtn_like2'}\n            />\n            <p>点赞</p>\n          </div>\n          <div className=\"action-item\" onClick={onCollected}>\n            <Icon\n              type={is_collected ? 'iconbtn_collect_sel' : 'iconbtn_collect'}\n            />\n            <p>收藏</p>\n          </div>\n        </>\n      )}\n\n      {type === 'reply' && (\n        <div className=\"action-item\" onClick={onLike}>\n          <Icon type={attitude === 1 ? 'iconbtn_like_sel' : 'iconbtn_like2'} />\n          <p>点赞</p>\n        </div>\n      )}\n\n      <div className=\"action-item\" onClick={onShare}>\n        <Icon type=\"iconbtn_share\" />\n        <p>分享</p>\n      </div>\n    </div>\n  )\n}\n\nexport default CommentFooter\n","import { useEffect, useState } from 'react'\nimport { Popup, NavBar, Toast } from 'antd-mobile'\n\nimport CommentItem from '../CommentItem'\nimport CommentFooter from '../CommentFooter'\nimport CommentInput from '../CommentInput'\nimport NoneComment from '@/components/NoneComment'\n\nimport styles from './index.module.scss'\nimport {\n  AddCommentReplyResp,\n  ArtComment,\n  ArticleComment,\n  ArticleCommentResponse\n} from '@/store/data'\nimport { followArticleAuthor } from '@/store/actions'\nimport { http } from '@/utils'\nimport { useDispatch } from 'react-redux'\nimport { AxiosError } from 'axios'\n\ntype Props = {\n  // data 表示：要回复的评论\n  data: ArtComment\n  // art_id 表示：文章id\n  art_id: string\n  onClose: (commentId: string, total: number) => void\n  onReplyThumbsUp: (id: string, is_liking: boolean) => void\n}\n\nconst Reply = ({ data, art_id, onClose, onReplyThumbsUp }: Props) => {\n  const [originComment, setOriginComment] = useState(data)\n  const { com_id, aut_name, is_liking, like_count, aut_id, is_followed } =\n    originComment\n  const [commentOpen, setCommentOpen] = useState({\n    visible: false,\n    id: com_id\n  })\n  const [comment, setComment] = useState({} as ArticleComment)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    const loadDdata = async () => {\n      const res = await http.get<ArticleCommentResponse>('/comments', {\n        params: {\n          type: 'c',\n          source: com_id\n        }\n      })\n      // console.log(res)\n      setComment(res.data.data)\n    }\n    loadDdata()\n  }, [com_id])\n\n  // 展示评论窗口\n  const onComment = () => {\n    setCommentOpen({\n      visible: true,\n      id: com_id\n    })\n  }\n\n  // 关闭评论窗口\n  const onCloseComment = () => {\n    setCommentOpen({\n      ...commentOpen,\n      visible: false\n    })\n  }\n\n  // 对评论进行回复\n  const onSendComment = async (content: string) => {\n    // console.log('onSendComment', content, data.com_id, art_id)\n    const res = await http.post<AddCommentReplyResp>('/comments', {\n      target: com_id,\n      content,\n      art_id\n    })\n\n    setComment({\n      ...comment,\n      total_count: comment.total_count + 1,\n      results: [res.data.data.new_obj, ...comment.results]\n    })\n\n    // 关闭回复（带有文本框的抽屉）窗口\n    onCloseComment()\n  }\n\n  // 对回复点赞\n  const onThumbsUp = async (id: string, is_liking: boolean) => {\n    if (is_liking) {\n      // 取消点赞\n      await http.delete(`/comment/likings/${id}`)\n    } else {\n      // 点赞\n      await http.post('/comment/likings', {\n        target: id\n      })\n    }\n\n    const like_count = is_liking ? -1 : 1\n\n    setComment({\n      ...comment,\n      results: comment.results.map(item => {\n        if (item.com_id === id) {\n          return {\n            ...item,\n            is_liking: !is_liking,\n            like_count: item.like_count + like_count\n          }\n        }\n        return item\n      })\n    })\n  }\n\n  const onOriginThumbsUp = () => {\n    onReplyThumbsUp(com_id, is_liking)\n\n    const likeCount = is_liking ? -1 : 1\n    // 修改数据\n    setOriginComment({\n      ...originComment,\n      is_liking: !is_liking,\n      like_count: like_count + likeCount\n    })\n  }\n\n  const onFollow = async () => {\n    try {\n      await dispatch(followArticleAuthor(aut_id, is_followed))\n      Toast.show(is_followed ? '取消关注' : '已关注')\n      setOriginComment({\n        ...originComment,\n        is_followed: !is_followed\n      })\n    } catch (e) {\n      const error = e as AxiosError<{ message: string }>\n      Toast.show({\n        content: error.response?.data?.message,\n        duration: 1000\n      })\n    }\n  }\n\n  // 关闭对评论进行回复的抽屉\n  // 此时，需要将当前评论的总数量传递给父组件\n  const onBackToArticle = () => {\n    onClose(originComment.com_id, comment.total_count)\n  }\n\n  const { results, total_count } = comment\n\n  return (\n    <div className={styles.root}>\n      <div className=\"reply-wrapper\">\n        <NavBar className=\"transparent-navbar\" onBack={onBackToArticle}>\n          {total_count}条回复\n        </NavBar>\n\n        {/* 要回复的评论 */}\n        <div className=\"origin-comment\">\n          <CommentItem\n            type=\"origin\"\n            {...originComment}\n            onFollow={onFollow}\n            onThumbsUp={onOriginThumbsUp}\n          />\n        </div>\n\n        <div className=\"reply-list\">\n          <div className=\"reply-header\">全部回复</div>\n          {results?.length > 0 ? (\n            results.map(item => (\n              <CommentItem\n                type=\"reply\"\n                key={item.com_id}\n                {...item}\n                onThumbsUp={() => onThumbsUp(item.com_id, item.is_liking)}\n              />\n            ))\n          ) : (\n            <NoneComment />\n          )}\n        </div>\n\n        <CommentFooter\n          placeholder=\"去评论\"\n          type=\"reply\"\n          onComment={onComment}\n          attitude={is_liking ? 1 : 0}\n          onLike={onOriginThumbsUp}\n        />\n      </div>\n\n      {/* 回复文本框对应的抽屉 */}\n      <Popup\n        className=\"drawer\"\n        position=\"bottom\"\n        visible={commentOpen.visible}\n        onMaskClick={onCloseComment}\n        // onOpenChange={onCloseComment}\n      >\n        <div className=\"drawer-sidebar-wrapper\">\n          {commentOpen.visible && (\n            <CommentInput\n              name={aut_name}\n              onClose={onCloseComment}\n              onComment={onSendComment}\n            />\n          )}\n        </div>\n      </Popup>\n    </div>\n  )\n}\n\nexport default Reply\n","import styles from './index.module.scss'\n\ntype Props = {\n  onClose: () => void\n}\n\nconst Share = ({ onClose }: Props) => {\n  return (\n    <div className={styles.root}>\n      <div className=\"share-header\">立即分享给好友</div>\n      <div className=\"share-list\">\n        <div className=\"share-item\">\n          <img\n            src=\"https://img01.yzcdn.cn/vant/share-sheet-wechat.png\"\n            alt=\"\"\n          />\n          <span>微信</span>\n        </div>\n        <div className=\"share-item\">\n          <img\n            src=\"https://img01.yzcdn.cn/vant/share-sheet-wechat-moments.png\"\n            alt=\"\"\n          />\n          <span>朋友圈</span>\n        </div>\n        <div className=\"share-item\">\n          <img src=\"https://img01.yzcdn.cn/vant/share-sheet-weibo.png\" alt=\"\" />\n          <span>微博</span>\n        </div>\n        <div className=\"share-item\">\n          <img src=\"https://img01.yzcdn.cn/vant/share-sheet-qq.png\" alt=\"\" />\n          <span>QQ</span>\n        </div>\n      </div>\n      <div className=\"share-list\">\n        <div className=\"share-item\">\n          <img src=\"https://img01.yzcdn.cn/vant/share-sheet-link.png\" alt=\"\" />\n          <span>复制链接</span>\n        </div>\n        <div className=\"share-item\">\n          <img\n            src=\"https://img01.yzcdn.cn/vant/share-sheet-poster.png\"\n            alt=\"\"\n          />\n          <span>分享海报</span>\n        </div>\n        <div className=\"share-item\">\n          <img\n            src=\"https://img01.yzcdn.cn/vant/share-sheet-qrcode.png\"\n            alt=\"\"\n          />\n          <span>二维码</span>\n        </div>\n        <div className=\"share-item\">\n          <img\n            src=\"https://img01.yzcdn.cn/vant/share-sheet-weapp-qrcode.png\"\n            alt=\"\"\n          />\n          <span>小程序码</span>\n        </div>\n      </div>\n      <div className=\"share-cancel\" onClick={onClose}>\n        取消\n      </div>\n    </div>\n  )\n}\n\nexport default Share\n","import { Input, NavBar } from 'antd-mobile'\nimport classnames from 'classnames'\nimport io, { Socket } from 'socket.io-client'\n\nimport Icon from '../../../components/Icon'\n\nimport styles from './index.module.scss'\nimport { useEffect, useRef, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { baseURL, getToken } from '@/utils'\n\nconst Chat = () => {\n  const history = useHistory()\n  const [value, setValue] = useState('')\n  const [chatList, setChatList] = useState<\n    { message: string; type: 'user' | 'xz' }[]\n  >([])\n  const socketRef = useRef<Socket>()\n  const chatListRef = useRef<HTMLDivElement>(null)\n\n  useEffect(() => {\n    // 创建 socket 连接\n    const socketURL = baseURL!.replace('/v1_0', '')\n    // 创建 socket 连接\n    const socketio = io(socketURL, {\n      query: {\n        token: getToken().token,\n      },\n      transports: ['websocket'],\n    })\n\n    // 连接成功\n    socketio.on('connect', () => {\n      // console.log('连接成功')\n      setChatList([\n        { message: '你好，我是小智', type: 'xz' },\n        { message: '你有什么疑问？', type: 'xz' },\n      ])\n    })\n\n    // 接收服务器推送过来的消息\n    socketio.on('message', e => {\n      // console.log('接收到服务器发送的消息：', e)\n      setChatList(list => [\n        ...list,\n        {\n          message: e.msg,\n          type: 'xz',\n        },\n      ])\n    })\n\n    // 将 socketio 对象存储到 ref 中\n    socketRef.current = socketio\n  }, [])\n\n  // 只要聊天列表中内容改变，就要让页面滚动最底部，以展示聊天列表中所有的内容\n  useEffect(() => {\n    chatListRef.current!.scrollTop = chatListRef.current!.scrollHeight\n  }, [chatList])\n\n  // 敲回车时，给服务器发送消息\n  const onSendMsg = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.code !== 'Enter' || value.trim() === '') return\n\n    // 发送消息给服务器\n    socketRef.current?.emit('message', {\n      msg: value,\n      timestamp: +new Date() + '',\n    })\n\n    setChatList([\n      ...chatList,\n      {\n        type: 'user',\n        message: value,\n      },\n    ])\n\n    setValue('')\n  }\n\n  return (\n    <div className={styles.root}>\n      <NavBar className=\"fixed-header\" onBack={() => history.go(-1)}>\n        小智同学\n      </NavBar>\n\n      <div className=\"chat-list\" ref={chatListRef}>\n        {chatList.map((item, index) => {\n          return (\n            <div\n              key={index}\n              className={classnames(\n                'chat-item',\n                item.type === 'xz' ? 'self' : 'user'\n              )}\n            >\n              {item.type === 'xz' ? (\n                <Icon type=\"iconbtn_xiaozhitongxue\" />\n              ) : (\n                <img\n                  src=\"http://geek.itheima.net/images/user_head.jpg\"\n                  alt=\"\"\n                />\n              )}\n              <div className=\"message\">{item.message}</div>\n            </div>\n          )\n        })}\n      </div>\n\n      <div className=\"input-footer\">\n        <Input\n          className=\"no-border\"\n          placeholder=\"请描述您的问题\"\n          value={value}\n          onChange={value => setValue(value)}\n          onKeyDown={onSendMsg}\n        />\n        <Icon type=\"iconbianji\" />\n      </div>\n    </div>\n  )\n}\n\nexport default Chat\n","import { useHistory } from 'react-router-dom'\nimport { NavBar, ImageUploader, Input, TextArea } from 'antd-mobile'\n\nimport styles from './index.module.scss'\n\nconst FeedBack = () => {\n  const history = useHistory()\n\n  return (\n    <div className={styles.root}>\n      <NavBar onBack={() => history.go(-1)}>意见反馈</NavBar>\n\n      <div className=\"wrapper\">\n        <div className=\"feedback-item\">\n          <p className=\"title\">简介</p>\n          <div className=\"textarea-wrap\">\n            <TextArea\n              className=\"textarea\"\n              placeholder=\"请输入\"\n              maxLength={100}\n              showCount\n            ></TextArea>\n          </div>\n          <ImageUploader upload={async () => ({ url: '' })} multiple />\n          <p className=\"image-picker-desc\">最多6张，单个图片不超过20M。</p>\n        </div>\n\n        <div className=\"feedback-item\">\n          <p className=\"title\">联系方式</p>\n          <div className=\"input-phone\">\n            <Input placeholder=\"请输入手机号码便于联系（非必填）\" />\n          </div>\n        </div>\n\n        <div className=\"feedback-item feedback-submit\">\n          <button>提交反馈</button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default FeedBack\n","import { useEffect } from 'react'\nimport { useHistory } from 'react-router'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { InfiniteScroll } from 'antd-mobile'\n\nimport { getUserArticle } from '@/store/actions'\nimport ArticleItem from '@/components/ArticleItem'\n\nimport styles from './index.module.scss'\nimport { AppState } from '@/store'\n\n// 该组件会接受到两个属性，分别是：\n// channelId -> 频道的 id 值\n// activeId -> 当前选中的频道 id 值\nconst Creation = () => {\n  const history = useHistory()\n  // dispatch\n  const dispatch = useDispatch()\n  // 是否下拉刷新中的状态\n  // 获取 redux 中的状态\n  const { userArticle } = useSelector((state: AppState) => state.profile)\n\n  // 根据当前频道id获取文章数据\n  const { page, per_page, total_count, results } = userArticle\n\n  useEffect(() => {\n    if (results.length !== 0) return\n    dispatch(getUserArticle(1))\n  }, [dispatch, results.length])\n\n  const loadMore = async () => {\n    await dispatch(getUserArticle(page + 1))\n  }\n\n  // 渲染文章列表\n  const renderArticleList = () => {\n    // 如果没有列表数据，直接返回 null，表示不渲染任何内容\n    if (!results) return null\n\n    // 有数据，再渲染列表\n    return results.map(item => {\n      const {\n        art_id,\n        /* aut_id,*/ aut_name,\n        comm_count,\n        cover: { type, images },\n        pubdate,\n        title\n      } = item\n\n      const articleItemProps = {\n        type,\n        title,\n        aut_name,\n        comm_count,\n        pubdate,\n        images,\n        isLogin: false\n      }\n      return (\n        <div\n          key={art_id}\n          className=\"article-item\"\n          onClick={() => history.push(`/article/${art_id}`)}\n        >\n          {/* 文章列表中的每一项 */}\n          <ArticleItem {...articleItemProps} />\n        </div>\n      )\n    })\n  }\n\n  const hasMore = page * per_page < total_count\n\n  return (\n    <div className={styles.root}>\n      {/* 文章列表 */}\n      <div className=\"articles\">\n        {/* 渲染文章列表 */}\n        {renderArticleList()}\n\n        {/* channelId === activeId 阻止非当前 tab 加载数据 */}\n        <InfiniteScroll hasMore={hasMore} loadMore={loadMore} />\n      </div>\n    </div>\n  )\n}\n\nexport default Creation\n","import { List } from 'antd-mobile'\nimport styles from './index.module.scss'\n\nconst Announcement = () => {\n  return (\n    <List className={styles.root}>\n      <List.Item description=\"2021/05/25 16:52:39\">\n        黑马程序员招新啦, 诚招各路编程高手\n      </List.Item>\n      <List.Item description=\"2021/1/25 16:52:39\">\n        传智教育成为A股中第一支成功IPO的教育产业股\n      </List.Item>\n      <List.Item description=\"2021/02/25 08:52:39\">\n        web前端工程师训练营来袭, 小伙伴们踊跃报名\n      </List.Item>\n    </List>\n  )\n}\n\nexport default Announcement\n","import Icon from '@/components/Icon'\nimport { AppState } from '@/store'\nimport { getUserFigure } from '@/store/actions'\nimport { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport styles from './index.module.scss'\n\nconst Statics = () => {\n  const dispatch = useDispatch()\n  const { userFigure } = useSelector((state: AppState) => state.profile)\n\n  useEffect(() => {\n    dispatch(getUserFigure())\n  }, [dispatch])\n\n  return (\n    <div className={styles.root}>\n      <div className=\"statics-list\">\n        <div className=\"card\">\n          <p>\n            <span>粉丝数</span>\n            <Icon className=\"right-arrow\" type=\"iconbtn_right\" />\n          </p>\n          <p>\n            <span>{userFigure.fans_count}</span>\n            <span>人</span>\n          </p>\n        </div>\n        <div className=\"card\">\n          <p>\n            <span>阅读数</span>\n          </p>\n          <p>\n            <span>{userFigure.read_count}</span>\n            <span>次</span>\n          </p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Statics\n","import { NavBar, Tabs } from 'antd-mobile'\nimport { useHistory } from 'react-router-dom'\n\nimport styles from './index.module.scss'\n\nimport Creation from './components/Creation'\nimport Announcement from './components/Announcement'\nimport Statics from './components/Statics'\n// const tabs = [\n//   { title: '作品', key: '1' },\n//   { title: '公告', key: '2' },\n//   { title: '数据', key: '3' }\n// ]\n\nconst Activity = () => {\n  const history = useHistory()\n\n  return (\n    <div className={styles.root}>\n      <NavBar onBack={() => history.go(-1)}>我的动态</NavBar>\n      <Tabs className=\"tabs\">\n        <Tabs.Tab title=\"作品\" key=\"1\">\n          <Creation />\n        </Tabs.Tab>\n        <Tabs.Tab title=\"公告\" key=\"2\">\n          <Announcement />\n        </Tabs.Tab>\n        <Tabs.Tab title=\"数据\" key=\"3\">\n          <Statics />\n        </Tabs.Tab>\n      </Tabs>\n    </div>\n  )\n}\n\nexport default Activity\n","import { AppState } from '@/store'\nimport { getUserFans } from '@/store/actions'\nimport { List, Button, InfiniteScroll } from 'antd-mobile'\nimport { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport styles from './index.module.scss'\n\nconst Followed = ({ type }: { type: 'followings' | 'followers' }) => {\n  const dispatch = useDispatch()\n  const { userFans } = useSelector((state: AppState) => state.profile)\n\n  const { page, results, total_count } = userFans[type]\n\n  useEffect(() => {\n    if (results.length > 0) return\n    dispatch(getUserFans(type, 1))\n  }, [dispatch, type, results.length])\n\n  const loadMore = async () => {\n    await dispatch(getUserFans(type, 1))\n  }\n\n  const hasMore = page * 10 < total_count\n\n  return (\n    <List className={styles.root}>\n      {results.map(item => (\n        <List.Item key={item.id}>\n          <div className=\"fans-item\">\n            <img src={item.photo} alt=\"\" />\n            <div className=\"user-info\">\n              <span>{item.name}</span>\n              <span className=\"count\">粉丝数：{item.fans_count} 人</span>\n            </div>\n            <Button className=\"follow-btn\">\n              {item.mutual_follow ? '取消关注' : '关注'}\n            </Button>\n          </div>\n        </List.Item>\n      ))}\n\n      <InfiniteScroll hasMore={hasMore} loadMore={loadMore} />\n    </List>\n  )\n}\n\nexport default Followed\n","import { NavBar, Tabs } from 'antd-mobile'\nimport { useHistory, useLocation } from 'react-router-dom'\n\nimport styles from './index.module.scss'\n\nimport Followed from './components/Followed'\n\nconst Fans = () => {\n  const history = useHistory()\n  const location = useLocation()\n\n  const search = new URLSearchParams(location.search)\n  const type = search.get('type')!\n\n  return (\n    <div className={styles.root}>\n      <NavBar onBack={() => history.go(-1)}>关注/粉丝</NavBar>\n      <Tabs className=\"tabs\" defaultActiveKey={type}>\n        <Tabs.Tab title=\"我的关注\" key=\"followings\">\n          <Followed type=\"followings\" />\n        </Tabs.Tab>\n        <Tabs.Tab title=\"我的粉丝\" key=\"followers\">\n          <Followed type=\"followers\" />\n        </Tabs.Tab>\n      </Tabs>\n    </div>\n  )\n}\n\nexport default Fans\n","import { useEffect } from 'react'\nimport { useHistory, useLocation } from 'react-router'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { InfiniteScroll, NavBar } from 'antd-mobile'\n\nimport { getUserArticleList } from '@/store/actions'\nimport ArticleItem from '@/components/ArticleItem'\n\nimport styles from './index.module.scss'\nimport { AppState } from '@/store'\n\ntype Path = '/article/collections' | '/user/histories' | '/user/articles'\nconst dataRecord: {\n  [key: string]: { title: string; path: Path }\n} = {\n  '1': { title: '我的收藏', path: '/article/collections' },\n  '2': { title: '阅读历史', path: '/user/histories' },\n  '3': { title: '我的作品', path: '/user/articles' }\n}\n\nconst Articles = () => {\n  const location = useLocation()\n\n  const search = new URLSearchParams(location.search)\n  const type = search.get('type')!\n  const history = useHistory()\n  // dispatch\n  const dispatch = useDispatch()\n  // 是否下拉刷新中的状态\n  // 获取 redux 中的状态\n  const { userArticleList } = useSelector((state: AppState) => state.profile)\n\n  const { title, path } = dataRecord[type]\n\n  // 根据当前频道id获取文章数据\n  const { page, per_page, total_count, results } = userArticleList[path]\n\n  useEffect(() => {\n    if (results.length !== 0) return\n    dispatch(getUserArticleList(path, 1))\n  }, [dispatch, results.length, path])\n\n  const loadMore = async () => {\n    await dispatch(getUserArticleList(path, page + 1))\n  }\n\n  // 渲染文章列表\n  const renderArticleList = () => {\n    // 如果没有列表数据，直接返回 null，表示不渲染任何内容\n    if (!results) return null\n\n    // 有数据，再渲染列表\n    return results.map(item => {\n      const {\n        art_id,\n        /* aut_id,*/ aut_name,\n        comm_count,\n        cover: { type, images },\n        pubdate,\n        title\n      } = item\n\n      const articleItemProps = {\n        type,\n        title,\n        aut_name,\n        comm_count,\n        pubdate,\n        images,\n        isLogin: false\n      }\n      return (\n        <div\n          key={art_id}\n          className=\"article-item\"\n          onClick={() => history.push(`/article/${art_id}`)}\n        >\n          {/* 文章列表中的每一项 */}\n          <ArticleItem {...articleItemProps} />\n        </div>\n      )\n    })\n  }\n\n  const hasMore = page * per_page < total_count\n\n  return (\n    <div className={styles.root}>\n      <NavBar onBack={() => history.go(-1)}>{title}</NavBar>\n      {/* 文章列表 */}\n      <div className=\"articles\">\n        {/* 渲染文章列表 */}\n        {renderArticleList()}\n\n        {/* channelId === activeId 阻止非当前 tab 加载数据 */}\n        <InfiniteScroll hasMore={hasMore} loadMore={loadMore} />\n      </div>\n    </div>\n  )\n}\n\nexport default Articles\n","import styles from './index.module.scss'\n\ntype Props = {\n  type?: 'all' | 'comment' | 'system' | 'fans' | 'thumbsup'\n  comment_target?: string\n  content: string\n  create_time: string\n  id: string\n  title: string\n}\n\nconst NotiItem = ({\n  type,\n  comment_target,\n  content,\n  create_time,\n  title\n}: Props) => {\n  return (\n    <div className={styles.root}>\n      <span className=\"time\">{create_time}</span>\n      <div className=\"user\">\n        <span>{title}</span>\n        <span className=\"content\">{content}</span>\n      </div>\n      {type !== 'fans' && <p className=\"comment-target\">{comment_target}</p>}\n    </div>\n  )\n}\n\nexport default NotiItem\n","import { List, InfiniteScroll } from 'antd-mobile'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useEffect } from 'react'\nimport styles from './index.module.scss'\nimport { getUserNotification } from '@/store/actions'\n\nimport NotiItem from '../NotiItem'\nimport noComment from '@/assets/none.png'\nimport { AppState } from '@/store'\n\nconst ListAll = ({\n  type\n}: {\n  type: 'all' | 'comment' | 'thumbsup' | 'fans' | 'system'\n}) => {\n  const dispatch = useDispatch()\n  const { userNotification1 } = useSelector((state: AppState) => state.profile)\n  const { page, results, total_count } = userNotification1[type]\n\n  useEffect(() => {\n    if (results.length > 0) return\n    dispatch(getUserNotification(type, 1))\n  }, [dispatch, type, results.length])\n\n  const loadMore = async () => {\n    await dispatch(getUserNotification(type, page + 1))\n  }\n\n  const hasMore = page * 10 < total_count\n\n  return (\n    <List className={styles.root}>\n      {results.map(item => (\n        <List.Item key={item.id}>\n          <NotiItem type={type} {...item} />\n        </List.Item>\n      ))}\n\n      <InfiniteScroll hasMore={hasMore} loadMore={loadMore}>\n        <div className=\"no-data\">\n          <img src={noComment} alt=\"\" />\n          <p className=\"no-comment\">暂无数据</p>\n        </div>\n      </InfiniteScroll>\n    </List>\n  )\n}\n\nexport default ListAll\n","import { NavBar, Tabs } from 'antd-mobile'\nimport { useHistory } from 'react-router-dom'\n\nimport styles from './index.module.scss'\n\nimport ListAll from './components/ListAll'\n\nconst Notification = () => {\n  const history = useHistory()\n\n  return (\n    <div className={styles.root}>\n      <NavBar onBack={() => history.go(-1)}>消息通知</NavBar>\n      <Tabs className=\"tabs\">\n        <Tabs.Tab title=\"全部\" key=\"all\">\n          <ListAll type=\"all\" />\n        </Tabs.Tab>\n        <Tabs.Tab title=\"系统通知\" key=\"system\">\n          <ListAll type=\"system\" />\n        </Tabs.Tab>\n        <Tabs.Tab title=\"评论\" key=\"comment\">\n          <ListAll type=\"comment\" />\n        </Tabs.Tab>\n        <Tabs.Tab title=\"粉丝\" key=\"fans\">\n          <ListAll type=\"fans\" />\n        </Tabs.Tab>\n        <Tabs.Tab title=\"点赞\" key=\"thumbsup\">\n          <ListAll type=\"thumbsup\" />\n        </Tabs.Tab>\n      </Tabs>\n    </div>\n  )\n}\n\nexport default Notification\n","import { Link, useHistory } from 'react-router-dom'\nimport { useState, useEffect, useRef } from 'react'\n\nconst NotFound = () => {\n  const history = useHistory()\n  const [time, setTime] = useState(5)\n  const timerRef = useRef(-1)\n\n  useEffect(() => {\n    timerRef.current = window.setInterval(() => {\n      console.log('123')\n      setTime(time => time - 1)\n    }, 1000)\n\n    return () => clearInterval(timerRef.current)\n  }, [])\n\n  useEffect(() => {\n    if (time < 1) {\n      history.replace('/home/index')\n    }\n  }, [time, history])\n\n  return (\n    <div>\n      <h1>对不起，你访问的内容不存在...</h1>\n      <p>\n        {time} 秒后，返回<Link to=\"/home/index\">首页</Link>\n      </p>\n    </div>\n  )\n}\n\nexport default NotFound\n","import { Router, Route, Redirect, Switch } from 'react-router-dom';\n\nimport { history } from '@/utils';\nimport AuthRoute from '@/components/AuthRoute';\nimport { KeepAlive } from './components/KeepAlive';\n\nimport Login from './pages/Login';\nimport Layout from './pages/Layout';\nimport ProfileEdit from './pages/Profile/Edit';\nimport Search from './pages/Search';\nimport SearchResult from './pages/Search/Result';\nimport Article from './pages/Article';\nimport ProfileChat from './pages/Profile/Chat';\nimport Feedback from './pages/Profile/Feedback';\nimport UserActivity from './pages/Profile/Activity';\nimport UserFans from './pages/Profile/Fans';\nimport UserArticles from './pages/Profile/Articles';\nimport UserNotification from './pages/Profile/Notification';\nimport NotFound from './pages/NotFound';\n\n// const UserArticleList = lazy(() => import('@/pages/Profile/Article'))\n// const UserFans = lazy(() => import('@/pages/Profile/Fans'))\n// const UserNotification = lazy(() => import('@/pages/Profile/Notification'))\n\nconst App = () => {\n  return (\n    <Router history={history}>\n      <div className=\"app\">\n        <KeepAlive activePath=\"/home\" exact path=\"/home\">\n          <Layout />\n        </KeepAlive>\n        <Switch>\n          <Route exact path=\"/\" render={() => <Redirect to=\"/home/index\" />} />\n          <Route\n            exact\n            path=\"/home\"\n            render={() => <Redirect to=\"/home/index\" />}\n          />\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <AuthRoute path=\"/profile/edit\">\n            <ProfileEdit />\n          </AuthRoute>\n          <Route exact path=\"/search\">\n            <Search />\n          </Route>\n          <Route path=\"/search/result\">\n            <SearchResult />\n          </Route>\n          <Route path=\"/article/:id\">\n            <Article />\n          </Route>\n          <Route path=\"/chat\">\n            <ProfileChat />\n          </Route>\n          <AuthRoute path=\"/profile/feedback\">\n            <Feedback />\n          </AuthRoute>\n          <AuthRoute path=\"/profile/activity\">\n            <UserActivity />\n          </AuthRoute>\n          <AuthRoute path=\"/profile/fans\">\n            <UserFans />\n          </AuthRoute>\n          <AuthRoute path=\"/profile/article\">\n            <UserArticles />\n          </AuthRoute>\n          <AuthRoute path=\"/profile/notification\">\n            <UserNotification />\n          </AuthRoute>\n\n          {/* 放在路由配置的最后，用来在路由不存在时，展示 404 页面 */}\n          {/* path=\"*\" 表示匹配所有路由 */}\n          <Route\n            path=\"*\"\n            render={(props) => {\n              // 注意：此处需要将 /home 排除掉，因为 Home 对应的路由没有放在 Switch 中\n              //      所以，路由匹配时，会全部匹配一次，当匹配到 Switch 内部时，此处，就会匹配成功\n              //      而我们不希望此处的 * 来匹配 Home\n              //      因此，此处将 /home 排除掉\n              if (props.location.pathname.startsWith('/home')) {\n                return null;\n              }\n              return <NotFound />;\n            }}\n          ></Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","import type { Token } from '../types'\n// const initialState: LoginState = {\n//   token: '',\n//   refresh_token: ''\n// }\n\n// 可以通过 as 来解决类型不匹配的问题，但是，一定要保证该代码将来不会报错\n// const initialState: LoginState = {} as LoginState\nconst initialState = {} as Token\n\n// 创建 action 的类型\n// type ActionType = {\n//   type: string\n//   payload: Token\n// }\n\nexport type LoginType = {\n  type: 'login/setToken'\n  payload: Token\n}\n\nconst login = (state = initialState, action: LoginType) => {\n  switch (action.type) {\n    case 'login/setToken':\n      return action.payload\n    default:\n      return state\n  }\n}\n\nexport { login }\n","// 该类型就是 获取用户个人资料 时，接口返回的数据格式\ntype Profile = {\n  id: string\n  name: string\n  photo: string\n  art_count: number\n  follow_count: number\n  fans_count: number\n  like_count: number\n}\n\ntype UserInfo = {\n  birthday: string\n  gender: number\n  intro: string | null\n  mobile: string\n  name: string\n  photo: string\n}\n\n// 文章列表项\ntype Article = {\n  art_id: string\n  aut_id: string\n  aut_name: string\n  comm_count: number\n  pubdate: string\n  title: string\n  cover: { type: number; images: string[] }\n}\ntype UserArticle = {\n  page: number\n  per_page: number\n  results: Article[]\n  total_count: number\n}\n\ntype Fans = {\n  fans_count: number\n  id: string\n  mutual_follow: boolean\n  name: string\n  photo: string\n}\ntype UserFans = Record<\n  'followings' | 'followers',\n  {\n    page: number\n    per_page: number\n    results: Fans[]\n    total_count: number\n  }\n>\n\ntype UserArticleList = Record<\n  '/article/collections' | '/user/histories' | '/user/articles',\n  {\n    page: number\n    per_page: number\n    results: Article[]\n    total_count: number\n  }\n>\n\ntype Notification1 = {\n  comment_target: string\n  content: string\n  create_time: string\n  id: string\n  title: string\n}\ntype Notification2 = Omit<Notification1, 'comment_target'>\ntype UserNotification1 = Record<\n  'all' | 'comment' | 'thumbsup' | 'fans' | 'system',\n  {\n    page: number\n    per_page: number\n    total_count: number\n    results: Notification1[] | Notification2[]\n  }\n>\n\ntype UserState = {\n  profile: Profile\n  userInfo: UserInfo\n  userArticle: UserArticle\n  userFigure: { fans_count: number; read_count: number }\n  userFans: UserFans\n  userArticleList: UserArticleList\n  userNotification1: UserNotification1\n}\n\nconst initialState = {\n  profile: {},\n  userInfo: {},\n  userArticle: {\n    results: [] as Article[]\n  },\n  userFigure: {},\n  userFans: {\n    followings: {\n      results: [] as Fans[]\n    },\n    followers: {\n      results: [] as Fans[]\n    }\n  },\n  userArticleList: {\n    '/article/collections': {\n      results: [] as Article[]\n    },\n    '/user/histories': {\n      results: [] as Article[]\n    },\n    '/user/articles': {\n      results: [] as Article[]\n    }\n  },\n  userNotification1: {\n    all: {\n      results: [] as Notification1[]\n    },\n    comment: {\n      results: [] as Notification1[]\n    },\n    thumbsup: {\n      results: [] as Notification1[]\n    },\n    fans: {\n      results: [] as Notification2[]\n    },\n    system: {\n      results: [] as Notification2[]\n    }\n  }\n} as UserState\n\nexport type ProfileType =\n  | {\n      type: 'profile/getProfile'\n      payload: Profile\n    }\n  | {\n      type: 'profile/updateUser'\n      payload: Record<'birthday' | 'intro' | 'name', string> & {\n        gender: number\n      }\n    }\n  | {\n      type: 'profile/updatePhoto'\n      payload: { photo: string }\n    }\n  | {\n      type: 'profile/getUserInfo'\n      payload: UserInfo\n    }\n  | {\n      type: 'profile/getUserArticle'\n      payload: UserArticle\n    }\n  | {\n      type: 'profile/getUserFigure'\n      payload: { fans_count: number; read_count: number }\n    }\n  | {\n      type: 'profile/getUserFans'\n      payload: {\n        type: 'followings' | 'followers'\n        data: UserFans['followings'] | UserFans['followers']\n      }\n    }\n  | {\n      type: 'profile/getUserArticleList'\n      payload: {\n        type: '/article/collections' | '/user/histories' | '/user/articles'\n        // 此处三个属性的类型是一样的，所以，使用任意一个表示都可以\n        data: UserArticleList['/article/collections']\n      }\n    }\n  | {\n      type: 'profile/getUserNotification'\n      payload: {\n        type: 'all' | 'comment' | 'thumbsup'\n        // 此处三个属性的类型是一样的，所以，使用任意一个表示都可以\n        data: UserNotification1['all']\n      }\n    }\n\nconst profile = (state = initialState, action: ProfileType): UserState => {\n  switch (action.type) {\n    case 'profile/getProfile':\n      return {\n        ...state,\n        profile: action.payload\n      }\n    case 'profile/updateUser':\n    case 'profile/updatePhoto':\n      return {\n        ...state,\n        userInfo: {\n          ...state.userInfo,\n          ...action.payload\n        }\n      }\n\n    case 'profile/getUserInfo':\n      return {\n        ...state,\n        userInfo: action.payload\n      }\n\n    case 'profile/getUserArticle':\n      return {\n        ...state,\n        userArticle: {\n          ...action.payload,\n          results: [...state.userArticle.results, ...action.payload.results]\n        }\n      }\n\n    case 'profile/getUserFigure':\n      return {\n        ...state,\n        userFigure: action.payload\n      }\n\n    case 'profile/getUserFans':\n      const { type, data } = action.payload\n      return {\n        ...state,\n        userFans: {\n          ...state.userFans,\n          [type]: {\n            ...data,\n            results: [...state.userFans[type].results, ...data.results]\n          }\n        }\n      }\n    case 'profile/getUserArticleList':\n      const { type: userArtListType, data: userArtListData } = action.payload\n      return {\n        ...state,\n        userArticleList: {\n          ...state.userArticleList,\n          [userArtListType]: {\n            ...userArtListData,\n            results: [\n              ...state.userArticleList[userArtListType].results,\n              ...userArtListData.results\n            ]\n          }\n        }\n      }\n\n    case 'profile/getUserNotification':\n      const { type: userNotiType, data: userNotiData } = action.payload\n      return {\n        ...state,\n        userNotification1: {\n          ...state.userNotification1,\n          [userNotiType]: {\n            ...userNotiData,\n            results: [\n              ...state.userNotification1[userNotiType].results,\n              ...userNotiData.results\n            ]\n          }\n        }\n      }\n    default:\n      return state\n  }\n}\n\nexport { profile }\n","// 排序的工具函数\nimport sortBy from 'lodash/sortBy'\n\nimport type { Channel } from '../types'\n\n// 文章列表项\ntype Article = {\n  art_id: string\n  aut_id: string\n  aut_name: string\n  comm_count: number\n  pubdate: string\n  title: string\n  cover: { type: number; images: string[] }\n}\n\ntype HomeState = {\n  channelActiveIndex: number\n  channels: Channel[]\n  restChannels: Channel[]\n\n  /**\n   * 所有频道的文章数据\n   */\n  articles: {\n    /**\n     * 因为不确定频道id，所以，使用 索引签名 来作为属性类型\n     */\n    [channelId: number]: {\n      prevTime: string\n      list: Article[]\n    }\n  }\n}\n\n// 创建该操作的默认值\nconst initialState = {\n  // 频道列表数据\n  channels: [],\n  // 推荐频道\n  restChannels: [],\n  // 文章列表数据\n  // { 频道id: 频道id的文章数据 }\n  articles: {},\n  // 频道高亮索引\n  channelActiveIndex: 0,\n} as HomeState\n\nexport type HomeType =\n  | { type: 'home/getMyChannels'; payload: Channel[] }\n  | { type: 'home/getRestChannels'; payload: Channel[] }\n  | { type: 'home/addChannel'; payload: number }\n  | { type: 'home/deleteChannel'; payload: Channel }\n  | { type: 'home/selectTab'; payload: number }\n  | {\n      type: 'home/getArticles'\n      payload: { channelId: number; prevTime: string; list: Article[] }\n    }\n  | {\n      type: 'home/getMoreArticles'\n      payload: { channelId: number; prevTime: string; list: Article[] }\n    }\n  | {\n      type: 'home/updateCommentMount'\n      payload: {\n        channelId: number\n        articleId: string\n        comm_count: number\n      }\n    }\n\nconst home = (state = initialState, action: HomeType): HomeState => {\n  switch (action.type) {\n    // 获取我的频道数据\n    case 'home/getMyChannels':\n      return {\n        ...state,\n        channels: action.payload,\n      }\n\n    // 获取剩余的频道数据（推荐频道）\n    case 'home/getRestChannels':\n      return {\n        ...state,\n        restChannels: action.payload,\n      }\n\n    // 添加频道\n    case 'home/addChannel':\n      // 先找到要删除的项\n      // 注意：使用数组的 find 方法时，是有可能找不到元素的，因此， find 方法的返回值类型中\n      //      会包含 undefined\n      //      但是，此处，我们很确定要删除的频道，一定能找到。\n      //      所以，此处使用 ! 非空断言，来排除掉 undefined 的情况\n      const deletedChannel = state.restChannels.find(\n        item => item.id === action.payload\n      )!\n      return {\n        ...state,\n        // 删除推荐频道中 id 为 payload 的项\n        restChannels: state.restChannels.filter(\n          item => item.id !== action.payload\n        ),\n        // 添加到我的频道数据中\n        channels: [...state.channels, deletedChannel],\n      }\n\n    // 删除频道\n    case 'home/deleteChannel':\n      return {\n        ...state,\n        // 我的频道\n        channels: state.channels.filter(item => item.id !== action.payload.id),\n        // 推荐频道数据\n        restChannels: sortBy([...state.restChannels, action.payload], 'id'),\n        // restChannels: [...state.restChannels, action.payload].sort(\n        //   (a, b) => a.id - b.id\n        // )\n      }\n\n    // 切换频道高亮\n    case 'home/selectTab':\n      return {\n        ...state,\n        // 频道高亮索引\n        channelActiveIndex: action.payload,\n      }\n\n    // 文章数据 - 覆盖数据\n    case 'home/getArticles':\n      return {\n        ...state,\n        articles: {\n          ...state.articles,\n          [action.payload.channelId]: {\n            // 上一次的时间戳\n            prevTime: action.payload.prevTime,\n            // 文章列表\n            list: action.payload.list,\n            // list: [...action.payload.list, ...state.articles[action.payload.channelId].list]\n          },\n        },\n      }\n\n    // 获取更多文章数据 - 追加数据\n    case 'home/getMoreArticles':\n      let channelId = action.payload.channelId\n      const oldList = state.articles[channelId]?.list ?? []\n      return {\n        ...state,\n        // 只修改 articles 这一个数据\n        articles: {\n          ...state.articles,\n          // 只修改当前 频道 的文章数据\n          [channelId]: {\n            // 上一次的时间戳\n            prevTime: action.payload.prevTime,\n            // 文章列表\n            // list: [...原来的文章列表数据, ...action.payload.list]\n            list: [...oldList, ...action.payload.list],\n          },\n        },\n      }\n\n    case 'home/updateCommentMount':\n      const updateChannelId = action.payload.channelId\n      const articleId = action.payload.articleId\n      return {\n        ...state,\n        articles: {\n          ...state.articles,\n          [updateChannelId]: {\n            ...state.articles[updateChannelId],\n            list: state.articles[updateChannelId].list.map(item => {\n              if (item.art_id === articleId) {\n                return {\n                  ...item,\n                  comm_count: action.payload.comm_count,\n                }\n              }\n              return item\n            }),\n          },\n        },\n      }\n    default:\n      return state\n  }\n}\n\nexport { home }\n","type Article = {\n  art_id: string\n  aut_id: string\n  aut_name: string\n  comm_count: number\n  pubdate: string\n  title: string\n  cover: { type: number; images: string[] }\n}\n\ntype SearchState = {\n  suggestion: string[]\n  searchResult: {\n    page: number\n    per_page: number\n    total_count: number\n    results: Article[]\n  }\n}\n\nconst initialState = {\n  suggestion: [],\n  searchResult: {\n    page: 1,\n    per_page: 10,\n    total_count: 0,\n    results: []\n  }\n} as SearchState\n\n// const initialState = {\n//   suggestion: [],\n//   searchResult: {} as SearchState['searchResult']\n// } as SearchState\n\ntype SearchAction =\n  | {\n      type: 'search/getSuggestion'\n      payload: string[]\n    }\n  | {\n      type: 'search/getSearchResult'\n      payload: {\n        page: number\n        per_page: number\n        total_count: number\n        results: Article[]\n      }\n    }\n  | { type: 'search/resetSuggestion' }\n\nconst search = (state = initialState, action: SearchAction) => {\n  switch (action.type) {\n    case 'search/getSuggestion':\n      return {\n        ...state,\n        // 只修改联想内容\n        suggestion: action.payload\n      }\n\n    case 'search/getSearchResult':\n      return {\n        ...state,\n        // 只修改搜索结果\n        searchResult: action.payload\n      }\n\n    // 重置联想数据\n    case 'search/resetSuggestion':\n      return {\n        ...state,\n        suggestion: []\n      }\n    default:\n      return state\n  }\n}\n\nexport { search }\n","import { ArticleComment, ArticleInfo, AddArticleComment } from '../data'\n\ntype ArticleState = {\n  info: ArticleInfo\n  comment: ArticleComment\n}\n\nconst initialState = {\n  // 文章详情\n  info: {},\n  // 评论列表数据\n  comment: {\n    total_count: 0,\n    // 此处直接给 results 属性一个 数组默认值，这样，不管有没有评论数据，那么，results 都是一个数组\n    results: [] as ArticleComment['results'],\n  },\n} as ArticleState\n\ntype ArticleAction =\n  | {\n      type: 'article/getArticleById'\n      payload: ArticleInfo\n    }\n  | { type: 'article/getArticleComment'; payload: ArticleComment }\n  | { type: 'article/getMoreArticleComments'; payload: ArticleComment }\n  | {\n      type: 'article/updateInfo'\n      payload: { name: string; value: boolean | number }\n    }\n  | {\n      type: 'article/sendComment'\n      payload: AddArticleComment\n    }\n  | {\n      type: 'article/updateCommentCount'\n      payload: { commentId: string; total: number }\n    }\n  | {\n      type: 'comment/updateInfo'\n      payload: {\n        name: string\n        value: boolean\n        target: string\n        like_count: number\n      }\n    }\n\nconst article = (state = initialState, action: ArticleAction): ArticleState => {\n  switch (action.type) {\n    case 'article/getArticleById':\n      return {\n        ...state,\n        info: action.payload,\n      }\n\n    case 'article/getArticleComment':\n      return {\n        ...state,\n        comment: action.payload,\n      }\n\n    case 'article/getMoreArticleComments':\n      console.log(action.payload)\n      return {\n        ...state,\n        comment: {\n          ...action.payload,\n          results: [...state.comment.results, ...action.payload.results],\n        },\n      }\n\n    // 统一处理 关注、收藏、点赞 三个状态\n    case 'article/updateInfo':\n      return {\n        ...state,\n        info: {\n          ...state.info,\n          [action.payload.name]: action.payload.value,\n        },\n      }\n\n    case 'article/sendComment':\n      return {\n        ...state,\n        info: {\n          ...state.info,\n          comm_count: state.info.comm_count + 1,\n        },\n        comment: {\n          ...state.comment,\n          total_count: state.comment.total_count + 1,\n          // last_id:\n          //   state.comment.total_count === 0 ? action.payload.com_id : null,\n          results: [action.payload.new_obj, ...state.comment.results],\n        },\n      }\n\n    case 'article/updateCommentCount':\n      return {\n        ...state,\n        comment: {\n          ...state.comment,\n          results: state.comment.results.map(item => {\n            // 将对应的评论项的回复条数，进行修改\n            if (item.com_id === action.payload.commentId) {\n              return {\n                ...item,\n                reply_count: action.payload.total,\n              }\n            }\n\n            return item\n          }),\n        },\n      }\n\n    case 'comment/updateInfo':\n      return {\n        ...state,\n        comment: {\n          ...state.comment,\n          results: state.comment.results.map(item => {\n            if (item.com_id === action.payload.target) {\n              return {\n                ...item,\n                [action.payload.name]: action.payload.value,\n                like_count: item.like_count + action.payload.like_count,\n              }\n            }\n\n            return item\n          }),\n        },\n      }\n    default:\n      return state\n  }\n}\n\nexport { article }\n","import { combineReducers } from 'redux'\n\n// 导入 login reducer\nimport { login } from './login'\n// 导入 profile reducer\nimport { profile } from './profile'\n// 导入 home reducer\nimport { home } from './home'\n// 导入 search reducer\nimport { search } from './search'\n// 导入 article reducer\nimport { article } from './article'\n\nconst rootReducer = combineReducers({\n  login,\n  profile,\n  home,\n  search,\n  article\n})\n\nexport default rootReducer\n","import { createStore, applyMiddleware, AnyAction } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport thunk, { ThunkAction, ThunkDispatch } from 'redux-thunk'\nimport { getToken } from '@/utils'\n\nimport rootReducer from './reducers'\n\n// import type { HomeType } from './reducers/home'\n// import type { LoginType } from './reducers/login'\n// import type { ProfileType } from './reducers/profile'\n\n// type Actions = HomeType | LoginType | ProfileType\n// type Actions = HomeType | LoginType | ProfileType\n\n// 创建中间件\nconst middlewares = composeWithDevTools(applyMiddleware(thunk))\n\n// 如果 redux 需要一些初始值，可以通过 createStore 的第二个参数来设置\n// 注意：此处设置的状态是整个 redux 的状态\n// redux 状态：{ login: {}, ... }\n\nconst initialState = {\n  // 为 login 设置默认值，也就是 token 值\n  login: getToken()\n}\n\nconst store = createStore(rootReducer, initialState, middlewares)\n\n// 获取整个 redux 应用中的状态类型\nexport type AppState = ReturnType<typeof store.getState>\n// 获取 函数形式的action（redux-thunk）的类型\n// Promise<void> 表示： 函数形式的 action 的返回值类型\n// AppState 表示：整个 Redux 应用状态的类型\n// unknown 表示：额外数据的类型，咱们的项目中用不到该参数\n// any 表示：整个应用中 Action 的类型 - 将来应该修改为项目中用到的所有 action 的类型\nexport type AppThunkAction = ThunkAction<\n  Promise<void>,\n  AppState,\n  unknown,\n  // Actions\n  AnyAction\n>\nexport type AppThunkDispatch = ThunkDispatch<AppState, unknown, AnyAction>\n\nexport default store\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\n// 导入 antd-mobile 的样式文件\n// import 'antd-mobile/dist/antd-mobile.css'\n\nimport App from './App';\n\n// 导入 index.scss 文件\nimport './index.scss';\n\n// 导入 store\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector('#root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}